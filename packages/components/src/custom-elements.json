{
  "timestamp": "2022-04-06T19:26:21",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.14.2",
    "typescriptVersion": "4.5.4"
  },
  "tags": [
    {
      "filePath": "./src/addons/addon-actions/addon-actions.tsx",
      "encapsulation": "shadow",
      "tag": "stories-addon-actions",
      "name": "stories-addon-actions",
      "readme": "# stories-addon-actions\n\nThe stories-addon-actions displays a panel with data received by event handler (callback) arguments in your stories.\n\n",
      "description": "The stories-addon-actions displays a panel with data received by event handler (callback) arguments in your stories.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [
        {
          "name": "storyContextChanged",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "storyContextChanged(story: StoryComponent, context: StoryContext) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        }
      ],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/addons/addon-controls/addon-controls.tsx",
      "encapsulation": "shadow",
      "tag": "stories-addon-controls",
      "name": "stories-addon-controls",
      "readme": "# stories-addon-controls\n\nThe stories-addon-controls helps you interact with components via changing arguments.\n",
      "description": "The stories-addon-controls helps you interact with components via changing arguments.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [
        {
          "name": "storyContextChanged",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "storyContextChanged(story: StoryComponent, context: StoryContext) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        }
      ],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/addons/addons/addons.tsx",
      "encapsulation": "shadow",
      "tag": "stories-addons",
      "name": "stories-addons",
      "readme": "# stories-addons\n\nThe stories-addons is a wrapping component implemented for helping in addons management.\n",
      "description": "The stories-addons is a wrapping component implemented for helping in addons management.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [
        {
          "name": "findAddon",
          "returns": {
            "type": "Promise<Addon>",
            "docs": ""
          },
          "signature": "findAddon(id: string) => Promise<Addon>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        },
        {
          "name": "registerAddon",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "registerAddon(addon: Addon) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        },
        {
          "name": "storyContextChanged",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "storyContextChanged(story: StoryComponent, context: StoryContext) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        },
        {
          "name": "unregisterAddon",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "unregisterAddon(addon: Addon) => Promise<void>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        }
      ],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/app/app.tsx",
      "encapsulation": "shadow",
      "tag": "stories-app",
      "name": "stories-app",
      "readme": "# stories-app\n\nThe stories-app is a main Stories Framework's application.\n",
      "description": "The stories-app is a main Stories Framework's application.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "modules",
          "type": "StoryModule[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Story Modules",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "StoryModule[]"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Story Modules"
        },
        {
          "name": "store",
          "type": "StoriesState & NotificationsState & LayoutState & AddonsState",
          "mutable": true,
          "reflectToAttr": false,
          "docs": "Story Modules",
          "docsTags": [],
          "default": "state",
          "values": [
            {
              "type": "StoriesState & NotificationsState & LayoutState & AddonsState"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Story Modules"
        }
      ],
      "attributes": [
        {
          "type": "StoryModule[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Story Modules",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "StoryModule[]"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "[]",
          "description": "Story Modules"
        },
        {
          "type": "StoriesState & NotificationsState & LayoutState & AddonsState",
          "mutable": true,
          "reflectToAttr": false,
          "docs": "Story Modules",
          "docsTags": [],
          "default": "state",
          "values": [
            {
              "type": "StoriesState & NotificationsState & LayoutState & AddonsState"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "state",
          "description": "Story Modules"
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "storyChange",
          "detail": "{ storyId: string; kinds: string[]; storyName: string; storyFn: StoryFn<AnyFramework, Args>; component?: any; subcomponents?: Record<string, any>; decorators?: DecoratorFunction<AnyFramework, Args>[]; args: Partial<Args>; argTypes: Partial<ArgTypes<Args>>; parameters?: Parameters; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": [],
          "name": "storyChange",
          "description": "",
          "type": "{ storyId: string; kinds: string[]; storyName: string; storyFn: StoryFn<AnyFramework, Args>; component?: any; subcomponents?: Record<string, any>; decorators?: DecoratorFunction<AnyFramework, Args>[]; args: Partial<Args>; argTypes: Partial<ArgTypes<Args>>; parameters?: Parameters; }"
        },
        {
          "event": "storyContextChange",
          "detail": "{ component?: any; subcomponents?: Record<string, any>; } & StoryUpdate<Args>",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": [],
          "name": "storyContextChange",
          "description": "",
          "type": "{ component?: any; subcomponents?: Record<string, any>; } & StoryUpdate<Args>"
        }
      ],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/badge/badge.tsx",
      "encapsulation": "shadow",
      "tag": "stories-badge",
      "name": "stories-badge",
      "readme": "# stories-badge\n\nThe stories-badge is inline block element uses for notification of how many items associated with another element.\n",
      "description": "The stories-badge is inline block element uses for notification of how many items associated with another element.",
      "docsTags": [],
      "usage": {
        "angular": "```html\n<!-- Default -->\n<stories-badge>99</stories-badge>\n\n<!-- Colors -->\n<stories-badge color=\"primary\">11</stories-badge>\n<stories-badge color=\"secondary\">22</stories-badge>\n<stories-badge color=\"tertiary\">33</stories-badge>\n<stories-badge color=\"success\">44</stories-badge>\n<stories-badge color=\"warning\">55</stories-badge>\n<stories-badge color=\"danger\">66</stories-badge>\n<stories-badge color=\"light\">77</stories-badge>\n<stories-badge color=\"medium\">88</stories-badge>\n<stories-badge color=\"dark\">99</stories-badge>\n\n<!-- Button with badge on left and right -->\n<stories-button>\n  <stories-badge slot=\"start\">11</stories-badge>\n  <stories-label>My Button</stories-label>\n  <stories-badge slot=\"end\">22</stories-badge>\n</stories-item>\n```",
        "javascript": "```html\n<!-- Default -->\n<stories-badge>99</stories-badge>\n\n<!-- Colors -->\n<stories-badge color=\"primary\">11</stories-badge>\n<stories-badge color=\"secondary\">22</stories-badge>\n<stories-badge color=\"tertiary\">33</stories-badge>\n<stories-badge color=\"success\">44</stories-badge>\n<stories-badge color=\"warning\">55</stories-badge>\n<stories-badge color=\"danger\">66</stories-badge>\n<stories-badge color=\"light\">77</stories-badge>\n<stories-badge color=\"medium\">88</stories-badge>\n<stories-badge color=\"dark\">99</stories-badge>\n\n<!-- Button with badge on left and right -->\n<stories-button>\n  <stories-badge slot=\"start\">11</stories-badge>\n  <stories-label>My Button</stories-label>\n  <stories-badge slot=\"end\">22</stories-badge>\n</stories-item>\n```",
        "react": "```tsx\nimport React from 'react';\nimport { StoriesBadge, StoriesButton, StoriesLabel } from '@stories-js/react';\n\nexport const BadgeExample: React.FC = () => (\n  <div>\n    {/*-- Default --*/}\n    <StoriesBadge>99</StoriesBadge>\n\n    {/*-- Colors --*/}\n    <StoriesBadge color=\"primary\">11</StoriesBadge>\n    <StoriesBadge color=\"secondary\">22</StoriesBadge>\n    <StoriesBadge color=\"tertiary\">33</StoriesBadge>\n    <StoriesBadge color=\"success\">44</StoriesBadge>\n    <StoriesBadge color=\"warning\">55</StoriesBadge>\n    <StoriesBadge color=\"danger\">66</StoriesBadge>\n    <StoriesBadge color=\"light\">77</StoriesBadge>\n    <StoriesBadge color=\"medium\">88</StoriesBadge>\n    <StoriesBadge color=\"dark\">99</StoriesBadge>\n\n    {/*-- Button with badge on left and right --*/}\n    <StoriesButton>\n      <StoriesBadge slot=\"start\">11</StoriesBadge>\n      <StoriesLabel>My Button</StoriesLabel>\n      <StoriesBadge slot=\"end\">22</StoriesBadge>\n    </StoriesButton>\n  </fiv>\n);\n```\n",
        "stencil": "```tsx\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'badge-example',\n  styleUrl: 'badge-example.css'\n})\nexport class BadgeExample {\n  render() {\n    return [\n      // Default\n      <stories-badge>99</stories-badge>,\n\n      // Colors\n      <stories-badge color=\"primary\">11</stories-badge>,\n      <stories-badge color=\"secondary\">22</stories-badge>,\n      <stories-badge color=\"tertiary\">33</stories-badge>,\n      <stories-badge color=\"success\">44</stories-badge>,\n      <stories-badge color=\"warning\">55</stories-badge>,\n      <stories-badge color=\"danger\">66</stories-badge>,\n      <stories-badge color=\"light\">77</stories-badge>,\n      <stories-badge color=\"medium\">88</stories-badge>,\n      <stories-badge color=\"dark\">99</stories-badge>,\n\n      // Button with badge on left and right\n      <stories-button>\n        <stories-badge slot=\"start\">11</stories-badge>\n        <stories-label>My Button</stories-label>\n        <stories-badge slot=\"end\">22</stories-badge>\n      </stories-button>\n    ];\n  }\n}\n```",
        "vue": "```html\n<template>\n  <!-- Default -->\n  <stories-badge>99</stories-badge>\n\n  <!-- Colors -->\n  <stories-badge color=\"primary\">11</stories-badge>\n  <stories-badge color=\"secondary\">22</stories-badge>\n  <stories-badge color=\"tertiary\">33</stories-badge>\n  <stories-badge color=\"success\">44</stories-badge>\n  <stories-badge color=\"warning\">55</stories-badge>\n  <stories-badge color=\"danger\">66</stories-badge>\n  <stories-badge color=\"light\">77</stories-badge>\n  <stories-badge color=\"medium\">88</stories-badge>\n  <stories-badge color=\"dark\">99</stories-badge>\n\n  <!-- Button with badge on left and right -->\n  <stories-button>\n    <stories-badge slot=\"start\">11</stories-badge>\n    <stories-label>My Button</stories-label>\n    <stories-badge slot=\"end\">22</stories-badge>\n  </stories-button>\n</template>\n\n<script>\nimport { StoriesBadge, StoriesButton, StoriesLabel } from '@stories-js/vue';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  components: { StoriesBadge, StoriesButton, StoriesLabel }\n});\n</script>\n```"
      },
      "properties": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        }
      ],
      "attributes": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the badge",
          "description": "Background of the badge"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Text color of the badge",
          "description": "Text color of the badge"
        },
        {
          "name": "--padding-bottom",
          "annotation": "prop",
          "docs": "Bottom padding of the badge",
          "description": "Bottom padding of the badge"
        },
        {
          "name": "--padding-end",
          "annotation": "prop",
          "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the badge",
          "description": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the badge"
        },
        {
          "name": "--padding-start",
          "annotation": "prop",
          "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the badge",
          "description": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the badge"
        },
        {
          "name": "--padding-top",
          "annotation": "prop",
          "docs": "Top padding of the badge",
          "description": "Top padding of the badge"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/button/button.tsx",
      "encapsulation": "shadow",
      "tag": "stories-button",
      "name": "stories-button",
      "readme": "# stories-button\n\nThe stories-button is an styled HTML button element displays text, icons, or both.\n",
      "description": "The stories-button is an styled HTML button element displays text, icons, or both.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "buttonType",
          "type": "string",
          "mutable": true,
          "attr": "button-type",
          "reflectToAttr": false,
          "docs": "The type of button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The type of button."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "If `true`, the user cannot interact with the button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot interact with the button."
        },
        {
          "name": "expand",
          "type": "\"block\" | \"full\"",
          "mutable": false,
          "attr": "expand",
          "reflectToAttr": true,
          "docs": "Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\nwithout left and right borders.",
          "docsTags": [],
          "values": [
            {
              "value": "block",
              "type": "string"
            },
            {
              "value": "full",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\nwithout left and right borders."
        },
        {
          "name": "fill",
          "type": "\"clear\" | \"default\" | \"outline\" | \"solid\"",
          "mutable": true,
          "attr": "fill",
          "reflectToAttr": true,
          "docs": "Set to `\"clear\"` for a transparent button, to `\"outline\"` for a transparent\nbutton with a border, or to `\"solid\"`. The default style is `\"solid\"` except inside of\na toolbar, where the default is `\"clear\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "clear",
              "type": "string"
            },
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "outline",
              "type": "string"
            },
            {
              "value": "solid",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set to `\"clear\"` for a transparent button, to `\"outline\"` for a transparent\nbutton with a border, or to `\"solid\"`. The default style is `\"solid\"` except inside of\na toolbar, where the default is `\"clear\"`."
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Contains a URL or a URL fragment that the hyperlink points to.\nIf this property is set, an anchor tag will be rendered.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Contains a URL or a URL fragment that the hyperlink points to.\nIf this property is set, an anchor tag will be rendered."
        },
        {
          "name": "routerDirection",
          "type": "\"back\" | \"forward\" | \"root\"",
          "mutable": false,
          "attr": "router-direction",
          "reflectToAttr": false,
          "docs": "When using a router, it specifies the transition direction when navigating to\nanother page using `href`.",
          "docsTags": [],
          "default": "'forward'",
          "values": [
            {
              "value": "back",
              "type": "string"
            },
            {
              "value": "forward",
              "type": "string"
            },
            {
              "value": "root",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "When using a router, it specifies the transition direction when navigating to\nanother page using `href`."
        },
        {
          "name": "shape",
          "type": "\"round\"",
          "mutable": false,
          "attr": "shape",
          "reflectToAttr": true,
          "docs": "The button shape.",
          "docsTags": [],
          "values": [
            {
              "value": "round",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The button shape."
        },
        {
          "name": "size",
          "type": "\"default\" | \"large\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": true,
          "docs": "The button size.",
          "docsTags": [],
          "values": [
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The button size."
        },
        {
          "name": "strong",
          "type": "boolean",
          "mutable": false,
          "attr": "strong",
          "reflectToAttr": false,
          "docs": "If `true`, activates a button with a heavier font weight.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, activates a button with a heavier font weight."
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.\nSpecial keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.\nSpecial keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`."
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of the button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The type of the button."
        }
      ],
      "attributes": [
        {
          "name": "button-type",
          "type": "string",
          "mutable": true,
          "attr": "button-type",
          "reflectToAttr": false,
          "docs": "The type of button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'button'",
          "description": "The type of button."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "If `true`, the user cannot interact with the button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot interact with the button."
        },
        {
          "name": "expand",
          "type": "\"block\" | \"full\"",
          "mutable": false,
          "attr": "expand",
          "reflectToAttr": true,
          "docs": "Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\nwithout left and right borders.",
          "docsTags": [],
          "values": [
            {
              "value": "block",
              "type": "string"
            },
            {
              "value": "full",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set to `\"block\"` for a full-width button or to `\"full\"` for a full-width button\nwithout left and right borders."
        },
        {
          "name": "fill",
          "type": "\"clear\" | \"default\" | \"outline\" | \"solid\"",
          "mutable": true,
          "attr": "fill",
          "reflectToAttr": true,
          "docs": "Set to `\"clear\"` for a transparent button, to `\"outline\"` for a transparent\nbutton with a border, or to `\"solid\"`. The default style is `\"solid\"` except inside of\na toolbar, where the default is `\"clear\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "clear",
              "type": "string"
            },
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "outline",
              "type": "string"
            },
            {
              "value": "solid",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set to `\"clear\"` for a transparent button, to `\"outline\"` for a transparent\nbutton with a border, or to `\"solid\"`. The default style is `\"solid\"` except inside of\na toolbar, where the default is `\"clear\"`."
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Contains a URL or a URL fragment that the hyperlink points to.\nIf this property is set, an anchor tag will be rendered.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Contains a URL or a URL fragment that the hyperlink points to.\nIf this property is set, an anchor tag will be rendered."
        },
        {
          "name": "router-direction",
          "type": "\"back\" | \"forward\" | \"root\"",
          "mutable": false,
          "attr": "router-direction",
          "reflectToAttr": false,
          "docs": "When using a router, it specifies the transition direction when navigating to\nanother page using `href`.",
          "docsTags": [],
          "default": "'forward'",
          "values": [
            {
              "value": "back",
              "type": "string"
            },
            {
              "value": "forward",
              "type": "string"
            },
            {
              "value": "root",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'forward'",
          "description": "When using a router, it specifies the transition direction when navigating to\nanother page using `href`."
        },
        {
          "name": "shape",
          "type": "\"round\"",
          "mutable": false,
          "attr": "shape",
          "reflectToAttr": true,
          "docs": "The button shape.",
          "docsTags": [],
          "values": [
            {
              "value": "round",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The button shape."
        },
        {
          "name": "size",
          "type": "\"default\" | \"large\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": true,
          "docs": "The button size.",
          "docsTags": [],
          "values": [
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The button size."
        },
        {
          "name": "strong",
          "type": "boolean",
          "mutable": false,
          "attr": "strong",
          "reflectToAttr": false,
          "docs": "If `true`, activates a button with a heavier font weight.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, activates a button with a heavier font weight."
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.\nSpecial keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Specifies where to display the linked URL.\nOnly applies when an `href` is provided.\nSpecial keywords: `\"_blank\"`, `\"_self\"`, `\"_parent\"`, `\"_top\"`."
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of the button.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'button'",
          "description": "The type of the button."
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "storiesBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button loses focus.",
          "docsTags": [],
          "name": "storiesBlur",
          "description": "Emitted when the button loses focus.",
          "type": "void"
        },
        {
          "event": "storiesClick",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button click.",
          "docsTags": [],
          "name": "storiesClick",
          "description": "Emitted when the button click.",
          "type": "void"
        },
        {
          "event": "storiesFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the button has focus.",
          "docsTags": [],
          "name": "storiesFocus",
          "description": "Emitted when the button has focus.",
          "type": "void"
        }
      ],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the button",
          "description": "Background of the button"
        },
        {
          "name": "--background-activated",
          "annotation": "prop",
          "docs": "Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.",
          "description": "Background of the button when pressed. Note: setting this will interfere with the Material Design ripple."
        },
        {
          "name": "--background-activated-opacity",
          "annotation": "prop",
          "docs": "Opacity of the button when pressed",
          "description": "Opacity of the button when pressed"
        },
        {
          "name": "--background-focused",
          "annotation": "prop",
          "docs": "Background of the button when focused with the tab key",
          "description": "Background of the button when focused with the tab key"
        },
        {
          "name": "--background-focused-opacity",
          "annotation": "prop",
          "docs": "Opacity of the button when focused with the tab key",
          "description": "Opacity of the button when focused with the tab key"
        },
        {
          "name": "--background-hover",
          "annotation": "prop",
          "docs": "Background of the button on hover",
          "description": "Background of the button on hover"
        },
        {
          "name": "--background-hover-opacity",
          "annotation": "prop",
          "docs": "Opacity of the background on hover",
          "description": "Opacity of the background on hover"
        },
        {
          "name": "--border-color",
          "annotation": "prop",
          "docs": "Border color of the button",
          "description": "Border color of the button"
        },
        {
          "name": "--border-radius",
          "annotation": "prop",
          "docs": "Border radius of the button",
          "description": "Border radius of the button"
        },
        {
          "name": "--border-style",
          "annotation": "prop",
          "docs": "Border style of the button",
          "description": "Border style of the button"
        },
        {
          "name": "--border-width",
          "annotation": "prop",
          "docs": "Border width of the button",
          "description": "Border width of the button"
        },
        {
          "name": "--box-shadow",
          "annotation": "prop",
          "docs": "Box shadow of the button",
          "description": "Box shadow of the button"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Text color of the button",
          "description": "Text color of the button"
        },
        {
          "name": "--color-activated",
          "annotation": "prop",
          "docs": "Text color of the button when pressed",
          "description": "Text color of the button when pressed"
        },
        {
          "name": "--color-focused",
          "annotation": "prop",
          "docs": "Text color of the button when focused with the tab key",
          "description": "Text color of the button when focused with the tab key"
        },
        {
          "name": "--color-hover",
          "annotation": "prop",
          "docs": "Text color of the button when hover",
          "description": "Text color of the button when hover"
        },
        {
          "name": "--opacity",
          "annotation": "prop",
          "docs": "Opacity of the button",
          "description": "Opacity of the button"
        },
        {
          "name": "--padding-bottom",
          "annotation": "prop",
          "docs": "Bottom padding of the button",
          "description": "Bottom padding of the button"
        },
        {
          "name": "--padding-end",
          "annotation": "prop",
          "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button",
          "description": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button"
        },
        {
          "name": "--padding-start",
          "annotation": "prop",
          "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button",
          "description": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button"
        },
        {
          "name": "--padding-top",
          "annotation": "prop",
          "docs": "Top padding of the button",
          "description": "Top padding of the button"
        },
        {
          "name": "--ripple-color",
          "annotation": "prop",
          "docs": "Color of the button ripple effect",
          "description": "Color of the button ripple effect"
        },
        {
          "name": "--transition",
          "annotation": "prop",
          "docs": "Transition of the button",
          "description": "Transition of the button"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/buttons/buttons.tsx",
      "encapsulation": "shadow",
      "tag": "stories-buttons",
      "name": "stories-buttons",
      "readme": "# stories-buttons\n\nThe stories-buttons is an wrapping container for another buttons.\n",
      "description": "The stories-buttons is an wrapping container for another buttons.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "collapse",
          "type": "boolean",
          "mutable": false,
          "attr": "collapse",
          "reflectToAttr": false,
          "docs": "If true, buttons will disappear when its\nparent toolbar has fully collapsed if the toolbar\nis not the first toolbar. If the toolbar is the\nfirst toolbar, the buttons will be hidden and will\nonly be shown once all toolbars have fully collapsed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If true, buttons will disappear when its\nparent toolbar has fully collapsed if the toolbar\nis not the first toolbar. If the toolbar is the\nfirst toolbar, the buttons will be hidden and will\nonly be shown once all toolbars have fully collapsed."
        }
      ],
      "attributes": [
        {
          "name": "collapse",
          "type": "boolean",
          "mutable": false,
          "attr": "collapse",
          "reflectToAttr": false,
          "docs": "If true, buttons will disappear when its\nparent toolbar has fully collapsed if the toolbar\nis not the first toolbar. If the toolbar is the\nfirst toolbar, the buttons will be hidden and will\nonly be shown once all toolbars have fully collapsed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If true, buttons will disappear when its\nparent toolbar has fully collapsed if the toolbar\nis not the first toolbar. If the toolbar is the\nfirst toolbar, the buttons will be hidden and will\nonly be shown once all toolbars have fully collapsed."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/checkbox/checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "stories-checkbox",
      "name": "stories-checkbox",
      "readme": "# stories-checkbox\n\nThe stories-checkbox is a styled HTML checkboxed input element.\n",
      "description": "The stories-checkbox is a styled HTML checkboxed input element.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "If `true`, the checkbox is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the checkbox is selected."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the checkbox.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot interact with the checkbox."
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "mutable": true,
          "attr": "indeterminate",
          "reflectToAttr": false,
          "docs": "If `true`, the checkbox will visually appear as indeterminate.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the checkbox will visually appear as indeterminate."
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The name of the control, which is submitted with the form data."
        },
        {
          "name": "value",
          "type": "any",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the checkbox does not mean if it's checked or not, use the `checked`\nproperty for that.\n\nThe value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\nit's only used when the checkbox participates in a native `<form>`.",
          "docsTags": [],
          "default": "'on'",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The value of the checkbox does not mean if it's checked or not, use the `checked`\nproperty for that.\n\nThe value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\nit's only used when the checkbox participates in a native `<form>`."
        }
      ],
      "attributes": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "If `true`, the checkbox is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the checkbox is selected."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the checkbox.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot interact with the checkbox."
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "mutable": true,
          "attr": "indeterminate",
          "reflectToAttr": false,
          "docs": "If `true`, the checkbox will visually appear as indeterminate.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the checkbox will visually appear as indeterminate."
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "this.inputId",
          "description": "The name of the control, which is submitted with the form data."
        },
        {
          "name": "value",
          "type": "any",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the checkbox does not mean if it's checked or not, use the `checked`\nproperty for that.\n\nThe value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\nit's only used when the checkbox participates in a native `<form>`.",
          "docsTags": [],
          "default": "'on'",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'on'",
          "description": "The value of the checkbox does not mean if it's checked or not, use the `checked`\nproperty for that.\n\nThe value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\nit's only used when the checkbox participates in a native `<form>`."
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "storiesBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the checkbox loses focus.",
          "docsTags": [],
          "name": "storiesBlur",
          "description": "Emitted when the checkbox loses focus.",
          "type": "void"
        },
        {
          "event": "storiesChange",
          "detail": "CheckboxChangeEventDetail<any>",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the checked property has changed.",
          "docsTags": [],
          "name": "storiesChange",
          "description": "Emitted when the checked property has changed.",
          "type": "CheckboxChangeEventDetail<any>"
        },
        {
          "event": "storiesFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the checkbox has focus.",
          "docsTags": [],
          "name": "storiesFocus",
          "description": "Emitted when the checkbox has focus.",
          "type": "void"
        }
      ],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the checkbox icon",
          "description": "Background of the checkbox icon"
        },
        {
          "name": "--background-checked",
          "annotation": "prop",
          "docs": "Background of the checkbox icon when checked",
          "description": "Background of the checkbox icon when checked"
        },
        {
          "name": "--border-color",
          "annotation": "prop",
          "docs": "Border color of the checkbox icon",
          "description": "Border color of the checkbox icon"
        },
        {
          "name": "--border-color-checked",
          "annotation": "prop",
          "docs": "Border color of the checkbox icon when checked",
          "description": "Border color of the checkbox icon when checked"
        },
        {
          "name": "--border-radius",
          "annotation": "prop",
          "docs": "Border radius of the checkbox icon",
          "description": "Border radius of the checkbox icon"
        },
        {
          "name": "--border-style",
          "annotation": "prop",
          "docs": "Border style of the checkbox icon",
          "description": "Border style of the checkbox icon"
        },
        {
          "name": "--border-width",
          "annotation": "prop",
          "docs": "Border width of the checkbox icon",
          "description": "Border width of the checkbox icon"
        },
        {
          "name": "--checkmark-color",
          "annotation": "prop",
          "docs": "Color of the checkbox checkmark when checked",
          "description": "Color of the checkbox checkmark when checked"
        },
        {
          "name": "--checkmark-width",
          "annotation": "prop",
          "docs": "Stroke width of the checkbox checkmark",
          "description": "Stroke width of the checkbox checkmark"
        },
        {
          "name": "--size",
          "annotation": "prop",
          "docs": "Size of the checkbox icon",
          "description": "Size of the checkbox icon"
        },
        {
          "name": "--transition",
          "annotation": "prop",
          "docs": "Transition of the checkbox icon",
          "description": "Transition of the checkbox icon"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/col/col.tsx",
      "encapsulation": "shadow",
      "tag": "stories-col",
      "name": "stories-col",
      "readme": "# stories-col\n\nThe stories-col is a container for content within a grid. You put it inside of a row and it always expand to fill the space of a row.\n",
      "description": "The stories-col is a container for content within a grid. You put it inside of a row and it always expand to fill the space of a row.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "offset",
          "type": "string",
          "mutable": false,
          "attr": "offset",
          "reflectToAttr": false,
          "docs": "The amount to offset the column, in terms of how many columns it should shift to the end\nof the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column, in terms of how many columns it should shift to the end\nof the total available."
        },
        {
          "name": "offsetLg",
          "type": "string",
          "mutable": false,
          "attr": "offset-lg",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for lg screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for lg screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offsetMd",
          "type": "string",
          "mutable": false,
          "attr": "offset-md",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for md screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for md screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offsetSm",
          "type": "string",
          "mutable": false,
          "attr": "offset-sm",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for sm screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for sm screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offsetXl",
          "type": "string",
          "mutable": false,
          "attr": "offset-xl",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for xl screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for xl screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offsetXs",
          "type": "string",
          "mutable": false,
          "attr": "offset-xs",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for xs screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for xs screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pull",
          "type": "string",
          "mutable": false,
          "attr": "pull",
          "reflectToAttr": false,
          "docs": "The amount to pull the column, in terms of how many columns it should shift to the start of\nthe total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column, in terms of how many columns it should shift to the start of\nthe total available."
        },
        {
          "name": "pullLg",
          "type": "string",
          "mutable": false,
          "attr": "pull-lg",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for lg screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for lg screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pullMd",
          "type": "string",
          "mutable": false,
          "attr": "pull-md",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for md screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for md screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pullSm",
          "type": "string",
          "mutable": false,
          "attr": "pull-sm",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for sm screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for sm screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pullXl",
          "type": "string",
          "mutable": false,
          "attr": "pull-xl",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for xl screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for xl screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pullXs",
          "type": "string",
          "mutable": false,
          "attr": "pull-xs",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for xs screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for xs screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "push",
          "type": "string",
          "mutable": false,
          "attr": "push",
          "reflectToAttr": false,
          "docs": "The amount to push the column, in terms of how many columns it should shift to the end\nof the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column, in terms of how many columns it should shift to the end\nof the total available."
        },
        {
          "name": "pushLg",
          "type": "string",
          "mutable": false,
          "attr": "push-lg",
          "reflectToAttr": false,
          "docs": "The amount to push the column for lg screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for lg screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pushMd",
          "type": "string",
          "mutable": false,
          "attr": "push-md",
          "reflectToAttr": false,
          "docs": "The amount to push the column for md screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for md screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pushSm",
          "type": "string",
          "mutable": false,
          "attr": "push-sm",
          "reflectToAttr": false,
          "docs": "The amount to push the column for sm screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for sm screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pushXl",
          "type": "string",
          "mutable": false,
          "attr": "push-xl",
          "reflectToAttr": false,
          "docs": "The amount to push the column for xl screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for xl screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pushXs",
          "type": "string",
          "mutable": false,
          "attr": "push-xs",
          "reflectToAttr": false,
          "docs": "The amount to push the column for xs screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for xs screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The size of the column, in terms of how many columns it should take up out of the total\navailable. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column, in terms of how many columns it should take up out of the total\navailable. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "sizeLg",
          "type": "string",
          "mutable": false,
          "attr": "size-lg",
          "reflectToAttr": false,
          "docs": "The size of the column for lg screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for lg screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "sizeMd",
          "type": "string",
          "mutable": false,
          "attr": "size-md",
          "reflectToAttr": false,
          "docs": "The size of the column for md screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for md screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "sizeSm",
          "type": "string",
          "mutable": false,
          "attr": "size-sm",
          "reflectToAttr": false,
          "docs": "The size of the column for sm screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for sm screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "sizeXl",
          "type": "string",
          "mutable": false,
          "attr": "size-xl",
          "reflectToAttr": false,
          "docs": "The size of the column for xl screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for xl screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "sizeXs",
          "type": "string",
          "mutable": false,
          "attr": "size-xs",
          "reflectToAttr": false,
          "docs": "The size of the column for xs screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for xs screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        }
      ],
      "attributes": [
        {
          "name": "offset",
          "type": "string",
          "mutable": false,
          "attr": "offset",
          "reflectToAttr": false,
          "docs": "The amount to offset the column, in terms of how many columns it should shift to the end\nof the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column, in terms of how many columns it should shift to the end\nof the total available."
        },
        {
          "name": "offset-lg",
          "type": "string",
          "mutable": false,
          "attr": "offset-lg",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for lg screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for lg screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offset-md",
          "type": "string",
          "mutable": false,
          "attr": "offset-md",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for md screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for md screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offset-sm",
          "type": "string",
          "mutable": false,
          "attr": "offset-sm",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for sm screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for sm screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offset-xl",
          "type": "string",
          "mutable": false,
          "attr": "offset-xl",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for xl screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for xl screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "offset-xs",
          "type": "string",
          "mutable": false,
          "attr": "offset-xs",
          "reflectToAttr": false,
          "docs": "The amount to offset the column for xs screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to offset the column for xs screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "pull",
          "type": "string",
          "mutable": false,
          "attr": "pull",
          "reflectToAttr": false,
          "docs": "The amount to pull the column, in terms of how many columns it should shift to the start of\nthe total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column, in terms of how many columns it should shift to the start of\nthe total available."
        },
        {
          "name": "pull-lg",
          "type": "string",
          "mutable": false,
          "attr": "pull-lg",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for lg screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for lg screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pull-md",
          "type": "string",
          "mutable": false,
          "attr": "pull-md",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for md screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for md screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pull-sm",
          "type": "string",
          "mutable": false,
          "attr": "pull-sm",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for sm screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for sm screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pull-xl",
          "type": "string",
          "mutable": false,
          "attr": "pull-xl",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for xl screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for xl screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "pull-xs",
          "type": "string",
          "mutable": false,
          "attr": "pull-xs",
          "reflectToAttr": false,
          "docs": "The amount to pull the column for xs screens, in terms of how many columns it should shift\nto the start of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to pull the column for xs screens, in terms of how many columns it should shift\nto the start of the total available."
        },
        {
          "name": "push",
          "type": "string",
          "mutable": false,
          "attr": "push",
          "reflectToAttr": false,
          "docs": "The amount to push the column, in terms of how many columns it should shift to the end\nof the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column, in terms of how many columns it should shift to the end\nof the total available."
        },
        {
          "name": "push-lg",
          "type": "string",
          "mutable": false,
          "attr": "push-lg",
          "reflectToAttr": false,
          "docs": "The amount to push the column for lg screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for lg screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "push-md",
          "type": "string",
          "mutable": false,
          "attr": "push-md",
          "reflectToAttr": false,
          "docs": "The amount to push the column for md screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for md screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "push-sm",
          "type": "string",
          "mutable": false,
          "attr": "push-sm",
          "reflectToAttr": false,
          "docs": "The amount to push the column for sm screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for sm screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "push-xl",
          "type": "string",
          "mutable": false,
          "attr": "push-xl",
          "reflectToAttr": false,
          "docs": "The amount to push the column for xl screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for xl screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "push-xs",
          "type": "string",
          "mutable": false,
          "attr": "push-xs",
          "reflectToAttr": false,
          "docs": "The amount to push the column for xs screens, in terms of how many columns it should shift\nto the end of the total available.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The amount to push the column for xs screens, in terms of how many columns it should shift\nto the end of the total available."
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The size of the column, in terms of how many columns it should take up out of the total\navailable. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column, in terms of how many columns it should take up out of the total\navailable. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "size-lg",
          "type": "string",
          "mutable": false,
          "attr": "size-lg",
          "reflectToAttr": false,
          "docs": "The size of the column for lg screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for lg screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "size-md",
          "type": "string",
          "mutable": false,
          "attr": "size-md",
          "reflectToAttr": false,
          "docs": "The size of the column for md screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for md screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "size-sm",
          "type": "string",
          "mutable": false,
          "attr": "size-sm",
          "reflectToAttr": false,
          "docs": "The size of the column for sm screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for sm screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "size-xl",
          "type": "string",
          "mutable": false,
          "attr": "size-xl",
          "reflectToAttr": false,
          "docs": "The size of the column for xl screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for xl screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        },
        {
          "name": "size-xs",
          "type": "string",
          "mutable": false,
          "attr": "size-xs",
          "reflectToAttr": false,
          "docs": "The size of the column for xs screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The size of the column for xs screens, in terms of how many columns it should take up out\nof the total available. If `\"auto\"` is passed, the column will be the size of its content."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--stories-grid-column-padding",
          "annotation": "prop",
          "docs": "Padding for the Column",
          "description": "Padding for the Column"
        },
        {
          "name": "--stories-grid-column-padding-lg",
          "annotation": "prop",
          "docs": "Padding for the Column on lg screens and up",
          "description": "Padding for the Column on lg screens and up"
        },
        {
          "name": "--stories-grid-column-padding-md",
          "annotation": "prop",
          "docs": "Padding for the Column on md screens and up",
          "description": "Padding for the Column on md screens and up"
        },
        {
          "name": "--stories-grid-column-padding-sm",
          "annotation": "prop",
          "docs": "Padding for the Column on sm screens and up",
          "description": "Padding for the Column on sm screens and up"
        },
        {
          "name": "--stories-grid-column-padding-xl",
          "annotation": "prop",
          "docs": "Padding for the Column on xl screens and up",
          "description": "Padding for the Column on xl screens and up"
        },
        {
          "name": "--stories-grid-column-padding-xs",
          "annotation": "prop",
          "docs": "Padding for the Column on xs screens and up",
          "description": "Padding for the Column on xs screens and up"
        },
        {
          "name": "--stories-grid-columns",
          "annotation": "prop",
          "docs": "The number of total Columns in the Grid",
          "description": "The number of total Columns in the Grid"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/footer/footer.tsx",
      "encapsulation": "shadow",
      "tag": "stories-footer",
      "name": "stories-footer",
      "readme": "# stories-footer\n\nThe stories-footer is a root component, always appears at the bottom of the page.\n",
      "description": "The stories-footer is a root component, always appears at the bottom of the page.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/grid/grid.tsx",
      "encapsulation": "shadow",
      "tag": "stories-grid",
      "name": "stories-grid",
      "readme": "# stories-grid\n\nThe stories-grid is a container designed on mobile-first flexbox system for building custom layouts. A layout based on a 12 columns by default, but could be easily customized to any number via CSS customization. Columns will expand to fill the row, and will resize to fit additional columns.\n",
      "description": "The stories-grid is a container designed on mobile-first flexbox system for building custom layouts. A layout based on a 12 columns by default, but could be easily customized to any number via CSS customization. Columns will expand to fill the row, and will resize to fit additional columns.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "fixed",
          "type": "boolean",
          "mutable": false,
          "attr": "fixed",
          "reflectToAttr": false,
          "docs": "If `true`, the grid will have a fixed width based on the screen size.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the grid will have a fixed width based on the screen size."
        }
      ],
      "attributes": [
        {
          "name": "fixed",
          "type": "boolean",
          "mutable": false,
          "attr": "fixed",
          "reflectToAttr": false,
          "docs": "If `true`, the grid will have a fixed width based on the screen size.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the grid will have a fixed width based on the screen size."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--stories-grid-padding",
          "annotation": "prop",
          "docs": "Padding for the Grid",
          "description": "Padding for the Grid"
        },
        {
          "name": "--stories-grid-padding-lg",
          "annotation": "prop",
          "docs": "Padding for the Grid on lg screens",
          "description": "Padding for the Grid on lg screens"
        },
        {
          "name": "--stories-grid-padding-md",
          "annotation": "prop",
          "docs": "Padding for the Grid on md screens",
          "description": "Padding for the Grid on md screens"
        },
        {
          "name": "--stories-grid-padding-sm",
          "annotation": "prop",
          "docs": "Padding for the Grid on sm screens",
          "description": "Padding for the Grid on sm screens"
        },
        {
          "name": "--stories-grid-padding-xl",
          "annotation": "prop",
          "docs": "Padding for the Grid on xl screens",
          "description": "Padding for the Grid on xl screens"
        },
        {
          "name": "--stories-grid-padding-xs",
          "annotation": "prop",
          "docs": "Padding for the Grid on xs screens",
          "description": "Padding for the Grid on xs screens"
        },
        {
          "name": "--stories-grid-width",
          "annotation": "prop",
          "docs": "Width of the fixed Grid",
          "description": "Width of the fixed Grid"
        },
        {
          "name": "--stories-grid-width-lg",
          "annotation": "prop",
          "docs": "Width of the fixed Grid on lg screens",
          "description": "Width of the fixed Grid on lg screens"
        },
        {
          "name": "--stories-grid-width-md",
          "annotation": "prop",
          "docs": "Width of the fixed Grid on md screens",
          "description": "Width of the fixed Grid on md screens"
        },
        {
          "name": "--stories-grid-width-sm",
          "annotation": "prop",
          "docs": "Width of the fixed Grid on sm screens",
          "description": "Width of the fixed Grid on sm screens"
        },
        {
          "name": "--stories-grid-width-xl",
          "annotation": "prop",
          "docs": "Width of the fixed Grid on xl screens",
          "description": "Width of the fixed Grid on xl screens"
        },
        {
          "name": "--stories-grid-width-xs",
          "annotation": "prop",
          "docs": "Width of the fixed Grid on xs screens",
          "description": "Width of the fixed Grid on xs screens"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icon/icon.tsx",
      "encapsulation": "shadow",
      "tag": "stories-icon",
      "name": "stories-icon",
      "readme": "# stories-icon\n\nThe stories-icon is an easy and performant way to use icons in your Stories application. It dynamically loads only visible SVG icons on demand.\n",
      "description": "The stories-icon is an easy and performant way to use icons in your Stories application. It dynamically loads only visible SVG icons on demand.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Icon name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Icon name"
        }
      ],
      "attributes": [
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Icon name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Icon name"
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [
        "stories-searchbar",
        "stories-tool-button"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "stories-searchbar": [
          "stories-icon"
        ],
        "stories-tool-button": [
          "stories-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/input/input.tsx",
      "encapsulation": "shadow",
      "tag": "stories-input",
      "name": "stories-input",
      "readme": "# stories-input\n\nThe stories-input component is a styled and enchanced HTML input element. It supports only standard text input events and types such as \"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", and \"url\".\n",
      "description": "The stories-input component is a styled and enchanced HTML input element. It supports only standard text input events and types such as \"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", and \"url\".",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads."
        },
        {
          "name": "clearInput",
          "type": "boolean",
          "mutable": false,
          "attr": "clear-input",
          "reflectToAttr": false,
          "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot interact with the input."
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`."
        },
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "The maximum value, which must not be less than its minimum (min attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The maximum value, which must not be less than its minimum (min attribute) value."
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter."
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "The minimum value, which must not be greater than its maximum (max attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The minimum value, which must not be greater than its maximum (max attribute) value."
        },
        {
          "name": "minlength",
          "type": "number",
          "mutable": false,
          "attr": "minlength",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter."
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The name of the control, which is submitted with the form data."
        },
        {
          "name": "pattern",
          "type": "string",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information."
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Instructional text that shows before the input has a value.\nThis property applies only when the `type` property is set to `\"email\"`,\n`\"number\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"text\"`, or `\"url\"`, otherwise it is ignored.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Instructional text that shows before the input has a value.\nThis property applies only when the `type` property is set to `\"email\"`,\n`\"number\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"text\"`, or `\"url\"`, otherwise it is ignored."
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot modify the value.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot modify the value."
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true`, the user must fill in a value before submitting a form.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user must fill in a value before submitting a form."
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored."
        },
        {
          "name": "step",
          "type": "string",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "Works with the min and max attributes to limit the increments at which a value can be set.\nPossible values are: `\"any\"` or a positive floating point number.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Works with the min and max attributes to limit the increments at which a value can be set.\nPossible values are: `\"any\"` or a positive floating point number."
        },
        {
          "name": "type",
          "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of control to display. The default type is text.",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "date",
              "type": "string"
            },
            {
              "value": "datetime-local",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "month",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "time",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "value": "week",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The type of control to display. The default type is text."
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the input.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The value of the input."
        }
      ],
      "attributes": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": false,
          "docs": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads."
        },
        {
          "name": "clear-input",
          "type": "boolean",
          "mutable": false,
          "attr": "clear-input",
          "reflectToAttr": false,
          "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "0",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot interact with the input."
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`."
        },
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "The maximum value, which must not be less than its minimum (min attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The maximum value, which must not be less than its minimum (min attribute) value."
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter."
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "The minimum value, which must not be greater than its maximum (max attribute) value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The minimum value, which must not be greater than its maximum (max attribute) value."
        },
        {
          "name": "minlength",
          "type": "number",
          "mutable": false,
          "attr": "minlength",
          "reflectToAttr": false,
          "docs": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter."
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the control, which is submitted with the form data.",
          "docsTags": [],
          "default": "this.inputId",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "this.inputId",
          "description": "The name of the control, which is submitted with the form data."
        },
        {
          "name": "pattern",
          "type": "string",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information."
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Instructional text that shows before the input has a value.\nThis property applies only when the `type` property is set to `\"email\"`,\n`\"number\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"text\"`, or `\"url\"`, otherwise it is ignored.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Instructional text that shows before the input has a value.\nThis property applies only when the `type` property is set to `\"email\"`,\n`\"number\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"text\"`, or `\"url\"`, otherwise it is ignored."
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot modify the value.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot modify the value."
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If `true`, the user must fill in a value before submitting a form.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user must fill in a value before submitting a form."
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored."
        },
        {
          "name": "step",
          "type": "string",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "Works with the min and max attributes to limit the increments at which a value can be set.\nPossible values are: `\"any\"` or a positive floating point number.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Works with the min and max attributes to limit the increments at which a value can be set.\nPossible values are: `\"any\"` or a positive floating point number."
        },
        {
          "name": "type",
          "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of control to display. The default type is text.",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "date",
              "type": "string"
            },
            {
              "value": "datetime-local",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "month",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "time",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            },
            {
              "value": "week",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'text'",
          "description": "The type of control to display. The default type is text."
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value of the input.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "defaultValue": "''",
          "description": "The value of the input."
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the native `input` in `stories-input`. Use this method instead of the global\n`input.focus()`.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "storiesBlur",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": [],
          "name": "storiesBlur",
          "description": "Emitted when the input loses focus.",
          "type": "FocusEvent"
        },
        {
          "event": "storiesChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": [],
          "name": "storiesChange",
          "description": "Emitted when the value has changed.",
          "type": "InputChangeEventDetail"
        },
        {
          "event": "storiesFocus",
          "detail": "FocusEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": [],
          "name": "storiesFocus",
          "description": "Emitted when the input has focus.",
          "type": "FocusEvent"
        },
        {
          "event": "storiesInput",
          "detail": "InputEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": [],
          "name": "storiesInput",
          "description": "Emitted when a keyboard input occurred.",
          "type": "InputEvent"
        }
      ],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the input",
          "description": "Background of the input"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Color of the input text",
          "description": "Color of the input text"
        },
        {
          "name": "--padding-bottom",
          "annotation": "prop",
          "docs": "Bottom padding of the input",
          "description": "Bottom padding of the input"
        },
        {
          "name": "--padding-end",
          "annotation": "prop",
          "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input",
          "description": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input"
        },
        {
          "name": "--padding-start",
          "annotation": "prop",
          "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input",
          "description": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input"
        },
        {
          "name": "--padding-top",
          "annotation": "prop",
          "docs": "Top padding of the input",
          "description": "Top padding of the input"
        },
        {
          "name": "--placeholder-color",
          "annotation": "prop",
          "docs": "Color of the input placeholder text",
          "description": "Color of the input placeholder text"
        },
        {
          "name": "--placeholder-font-style",
          "annotation": "prop",
          "docs": "Font style of the input placeholder text",
          "description": "Font style of the input placeholder text"
        },
        {
          "name": "--placeholder-font-weight",
          "annotation": "prop",
          "docs": "Font weight of the input placeholder text",
          "description": "Font weight of the input placeholder text"
        },
        {
          "name": "--placeholder-opacity",
          "annotation": "prop",
          "docs": "Opacity of the input placeholder text",
          "description": "Opacity of the input placeholder text"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/label/label.tsx",
      "encapsulation": "shadow",
      "tag": "stories-label",
      "name": "stories-label",
      "readme": "# stories-label\n\nThe stories-label is a wrapper element displays text, icons, or both. You can position it as inline, fixed, stacked, or floating element and will usually use it with another components such stories-item, stories-input, stories-toggle, etc.\n",
      "description": "The stories-label is a wrapper element displays text, icons, or both. You can position it as inline, fixed, stacked, or floating element and will usually use it with another components such stories-item, stories-input, stories-toggle, etc.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "position",
          "type": "\"fixed\" | \"floating\" | \"stacked\"",
          "mutable": false,
          "attr": "position",
          "reflectToAttr": false,
          "docs": "The position determines where and how the label behaves inside an item.",
          "docsTags": [],
          "default": "'fixed'",
          "values": [
            {
              "value": "fixed",
              "type": "string"
            },
            {
              "value": "floating",
              "type": "string"
            },
            {
              "value": "stacked",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The position determines where and how the label behaves inside an item."
        }
      ],
      "attributes": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "position",
          "type": "\"fixed\" | \"floating\" | \"stacked\"",
          "mutable": false,
          "attr": "position",
          "reflectToAttr": false,
          "docs": "The position determines where and how the label behaves inside an item.",
          "docsTags": [],
          "default": "'fixed'",
          "values": [
            {
              "value": "fixed",
              "type": "string"
            },
            {
              "value": "floating",
              "type": "string"
            },
            {
              "value": "stacked",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "defaultValue": "'fixed'",
          "description": "The position determines where and how the label behaves inside an item."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Color of the label",
          "description": "Color of the label"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/preview/preview.tsx",
      "encapsulation": "shadow",
      "tag": "stories-preview",
      "name": "stories-preview",
      "readme": "# stories-preview\n\nThe stories-preview is a wrapper container for stories-renderer component. It utilises stories-zoom component to manage visual size of the rendering content. \n",
      "description": "The stories-preview is a wrapper container for stories-renderer component. It utilises stories-zoom component to manage visual size of the rendering content.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [
        "stories-zoom"
      ],
      "dependencyGraph": {
        "stories-preview": [
          "stories-zoom"
        ]
      }
    },
    {
      "filePath": "./src/components/router/router.tsx",
      "encapsulation": "shadow",
      "tag": "stories-router",
      "name": "stories-router",
      "readme": "# stories-router\n\nThe stories-router is a component managing showing content in another components based on the browser's URL. It doent change DOM and only coordinates content in navigation outlets such as stories-nav, stories-tabs, and stories-router-outlet.\n",
      "description": "The stories-router is a component managing showing content in another components based on the browser's URL. It doent change DOM and only coordinates content in navigation outlets such as stories-nav, stories-tabs, and stories-router-outlet.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/row/row.tsx",
      "encapsulation": "shadow",
      "tag": "stories-row",
      "name": "stories-row",
      "readme": "# stories-row\n\nThe stories-row is a horizontal component of the grid system look after the columns are positioned properly.\n",
      "description": "The stories-row is a horizontal component of the grid system look after the columns are positioned properly.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/searchbar/searchbar.tsx",
      "encapsulation": "shadow",
      "tag": "stories-searchbar",
      "name": "stories-searchbar",
      "readme": "# stories-searchbar\n\nThe stories-searchbar is a text field with an icon that can be used to search through stories.\n",
      "description": "The stories-searchbar is a text field with an icon that can be used to search through stories.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "cancelButtonIcon",
          "type": "string",
          "mutable": false,
          "attr": "cancel-button-icon",
          "reflectToAttr": false,
          "docs": "Set the cancel button icon. Only applies to `md` mode.\nDefaults to `\"arrow-back-sharp\"`.",
          "docsTags": [],
          "default": "'arrow-back-sharp'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Set the cancel button icon. Only applies to `md` mode.\nDefaults to `\"arrow-back-sharp\"`."
        },
        {
          "name": "clearIcon",
          "type": "string",
          "mutable": false,
          "attr": "clear-icon",
          "reflectToAttr": false,
          "docs": "Set the clear icon. Defaults to `\"close-circle\"` for `ios` and `\"close-sharp\"` for `md`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set the clear icon. Defaults to `\"close-circle\"` for `ios` and `\"close-sharp\"` for `md`."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "250",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot interact with the input."
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`."
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Set the input's placeholder.\n`placeholder` can accept either plaintext or HTML as a string.\nTo display characters normally reserved for HTML, they\nmust be escaped. For example `<Stories>` would become\n`&lt;Stories&gt;`",
          "docsTags": [],
          "default": "'Search'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Set the input's placeholder.\n`placeholder` can accept either plaintext or HTML as a string.\nTo display characters normally reserved for HTML, they\nmust be escaped. For example `<Stories>` would become\n`&lt;Stories&gt;`"
        },
        {
          "name": "searchIcon",
          "type": "string",
          "mutable": false,
          "attr": "search-icon",
          "reflectToAttr": false,
          "docs": "The icon to use as the search icon. Defaults to `\"search-outline\"` in\n`ios` mode and `\"search-sharp\"` in `md` mode.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The icon to use as the search icon. Defaults to `\"search-outline\"` in\n`ios` mode and `\"search-sharp\"` in `md` mode."
        },
        {
          "name": "showCancelButton",
          "type": "\"always\" | \"focus\" | \"never\"",
          "mutable": false,
          "attr": "show-cancel-button",
          "reflectToAttr": false,
          "docs": "Sets the behavior for the cancel button. Defaults to `\"never\"`.\nSetting to `\"focus\"` shows the cancel button on focus.\nSetting to `\"never\"` hides the cancel button.\nSetting to `\"always\"` shows the cancel button regardless\nof focus state.",
          "docsTags": [],
          "default": "'never'",
          "values": [
            {
              "value": "always",
              "type": "string"
            },
            {
              "value": "focus",
              "type": "string"
            },
            {
              "value": "never",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Sets the behavior for the cancel button. Defaults to `\"never\"`.\nSetting to `\"focus\"` shows the cancel button on focus.\nSetting to `\"never\"` hides the cancel button.\nSetting to `\"always\"` shows the cancel button regardless\nof focus state."
        },
        {
          "name": "showClearButton",
          "type": "\"always\" | \"focus\" | \"never\"",
          "mutable": false,
          "attr": "show-clear-button",
          "reflectToAttr": false,
          "docs": "Sets the behavior for the clear button. Defaults to `\"focus\"`.\nSetting to `\"focus\"` shows the clear button on focus if the\ninput is not empty.\nSetting to `\"never\"` hides the clear button.\nSetting to `\"always\"` shows the clear button regardless\nof focus state, but only if the input is not empty.",
          "docsTags": [],
          "default": "'always'",
          "values": [
            {
              "value": "always",
              "type": "string"
            },
            {
              "value": "focus",
              "type": "string"
            },
            {
              "value": "never",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Sets the behavior for the clear button. Defaults to `\"focus\"`.\nSetting to `\"focus\"` shows the clear button on focus if the\ninput is not empty.\nSetting to `\"never\"` hides the clear button.\nSetting to `\"always\"` shows the clear button regardless\nof focus state, but only if the input is not empty."
        },
        {
          "name": "type",
          "type": "\"email\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Set the type of the input.",
          "docsTags": [],
          "default": "'search'",
          "values": [
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "Set the type of the input."
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "the value of the searchbar.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "the value of the searchbar."
        }
      ],
      "attributes": [
        {
          "name": "cancel-button-icon",
          "type": "string",
          "mutable": false,
          "attr": "cancel-button-icon",
          "reflectToAttr": false,
          "docs": "Set the cancel button icon. Only applies to `md` mode.\nDefaults to `\"arrow-back-sharp\"`.",
          "docsTags": [],
          "default": "'arrow-back-sharp'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'arrow-back-sharp'",
          "description": "Set the cancel button icon. Only applies to `md` mode.\nDefaults to `\"arrow-back-sharp\"`."
        },
        {
          "name": "clear-icon",
          "type": "string",
          "mutable": false,
          "attr": "clear-icon",
          "reflectToAttr": false,
          "docs": "Set the clear icon. Defaults to `\"close-circle\"` for `ios` and `\"close-sharp\"` for `md`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set the clear icon. Defaults to `\"close-circle\"` for `ios` and `\"close-sharp\"` for `md`."
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "debounce",
          "type": "number",
          "mutable": false,
          "attr": "debounce",
          "reflectToAttr": false,
          "docs": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "docsTags": [],
          "default": "250",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "250",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`."
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot interact with the input."
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A hint to the browser for which keyboard to display.\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`."
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Set the input's placeholder.\n`placeholder` can accept either plaintext or HTML as a string.\nTo display characters normally reserved for HTML, they\nmust be escaped. For example `<Stories>` would become\n`&lt;Stories&gt;`",
          "docsTags": [],
          "default": "'Search'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'Search'",
          "description": "Set the input's placeholder.\n`placeholder` can accept either plaintext or HTML as a string.\nTo display characters normally reserved for HTML, they\nmust be escaped. For example `<Stories>` would become\n`&lt;Stories&gt;`"
        },
        {
          "name": "search-icon",
          "type": "string",
          "mutable": false,
          "attr": "search-icon",
          "reflectToAttr": false,
          "docs": "The icon to use as the search icon. Defaults to `\"search-outline\"` in\n`ios` mode and `\"search-sharp\"` in `md` mode.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The icon to use as the search icon. Defaults to `\"search-outline\"` in\n`ios` mode and `\"search-sharp\"` in `md` mode."
        },
        {
          "name": "show-cancel-button",
          "type": "\"always\" | \"focus\" | \"never\"",
          "mutable": false,
          "attr": "show-cancel-button",
          "reflectToAttr": false,
          "docs": "Sets the behavior for the cancel button. Defaults to `\"never\"`.\nSetting to `\"focus\"` shows the cancel button on focus.\nSetting to `\"never\"` hides the cancel button.\nSetting to `\"always\"` shows the cancel button regardless\nof focus state.",
          "docsTags": [],
          "default": "'never'",
          "values": [
            {
              "value": "always",
              "type": "string"
            },
            {
              "value": "focus",
              "type": "string"
            },
            {
              "value": "never",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'never'",
          "description": "Sets the behavior for the cancel button. Defaults to `\"never\"`.\nSetting to `\"focus\"` shows the cancel button on focus.\nSetting to `\"never\"` hides the cancel button.\nSetting to `\"always\"` shows the cancel button regardless\nof focus state."
        },
        {
          "name": "show-clear-button",
          "type": "\"always\" | \"focus\" | \"never\"",
          "mutable": false,
          "attr": "show-clear-button",
          "reflectToAttr": false,
          "docs": "Sets the behavior for the clear button. Defaults to `\"focus\"`.\nSetting to `\"focus\"` shows the clear button on focus if the\ninput is not empty.\nSetting to `\"never\"` hides the clear button.\nSetting to `\"always\"` shows the clear button regardless\nof focus state, but only if the input is not empty.",
          "docsTags": [],
          "default": "'always'",
          "values": [
            {
              "value": "always",
              "type": "string"
            },
            {
              "value": "focus",
              "type": "string"
            },
            {
              "value": "never",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'always'",
          "description": "Sets the behavior for the clear button. Defaults to `\"focus\"`.\nSetting to `\"focus\"` shows the clear button on focus if the\ninput is not empty.\nSetting to `\"never\"` hides the clear button.\nSetting to `\"always\"` shows the clear button regardless\nof focus state, but only if the input is not empty."
        },
        {
          "name": "type",
          "type": "\"email\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Set the type of the input.",
          "docsTags": [],
          "default": "'search'",
          "values": [
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "'search'",
          "description": "Set the type of the input."
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "the value of the searchbar.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "defaultValue": "''",
          "description": "the value of the searchbar."
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "returns": {
            "type": "Promise<HTMLInputElement>",
            "docs": ""
          },
          "signature": "getInputElement() => Promise<HTMLInputElement>",
          "parameters": [],
          "docs": "Returns the native `<input>` element used under the hood.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the specified `stories-searchbar`. Use this method instead of the global\n`input.focus()`.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "storiesBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": [],
          "name": "storiesBlur",
          "description": "Emitted when the input loses focus.",
          "type": "void"
        },
        {
          "event": "storiesCancel",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the cancel button is clicked.",
          "docsTags": [],
          "name": "storiesCancel",
          "description": "Emitted when the cancel button is clicked.",
          "type": "void"
        },
        {
          "event": "storiesChange",
          "detail": "SearchbarChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": [],
          "name": "storiesChange",
          "description": "Emitted when the value has changed.",
          "type": "SearchbarChangeEventDetail"
        },
        {
          "event": "storiesClear",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the clear input button is clicked.",
          "docsTags": [],
          "name": "storiesClear",
          "description": "Emitted when the clear input button is clicked.",
          "type": "void"
        },
        {
          "event": "storiesFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": [],
          "name": "storiesFocus",
          "description": "Emitted when the input has focus.",
          "type": "void"
        },
        {
          "event": "storiesInput",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": [],
          "name": "storiesInput",
          "description": "Emitted when a keyboard input occurred.",
          "type": "KeyboardEvent"
        }
      ],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the searchbar input",
          "description": "Background of the searchbar input"
        },
        {
          "name": "--border-radius",
          "annotation": "prop",
          "docs": "Border radius of the searchbar input",
          "description": "Border radius of the searchbar input"
        },
        {
          "name": "--box-shadow",
          "annotation": "prop",
          "docs": "Box shadow of the searchbar input",
          "description": "Box shadow of the searchbar input"
        },
        {
          "name": "--cancel-button-color",
          "annotation": "prop",
          "docs": "Color of the searchbar cancel button",
          "description": "Color of the searchbar cancel button"
        },
        {
          "name": "--clear-button-color",
          "annotation": "prop",
          "docs": "Color of the searchbar clear button",
          "description": "Color of the searchbar clear button"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Color of the searchbar text",
          "description": "Color of the searchbar text"
        },
        {
          "name": "--icon-color",
          "annotation": "prop",
          "docs": "Color of the searchbar icon",
          "description": "Color of the searchbar icon"
        },
        {
          "name": "--placeholder-color",
          "annotation": "prop",
          "docs": "Color of the searchbar placeholder",
          "description": "Color of the searchbar placeholder"
        },
        {
          "name": "--placeholder-font-style",
          "annotation": "prop",
          "docs": "Font style of the searchbar placeholder",
          "description": "Font style of the searchbar placeholder"
        },
        {
          "name": "--placeholder-font-weight",
          "annotation": "prop",
          "docs": "Font weight of the searchbar placeholder",
          "description": "Font weight of the searchbar placeholder"
        },
        {
          "name": "--placeholder-opacity",
          "annotation": "prop",
          "docs": "Opacity of the searchbar placeholder",
          "description": "Opacity of the searchbar placeholder"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [
        "stories-icon"
      ],
      "dependencyGraph": {
        "stories-searchbar": [
          "stories-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/sidebar/sidebar.tsx",
      "encapsulation": "shadow",
      "tag": "stories-sidebar",
      "name": "stories-sidebar",
      "readme": "# stories-sidebar\n\nThe stories-sidebar displays collection of names of stories. Every story's name is the link your can click to navigate to story.\n",
      "description": "The stories-sidebar displays collection of names of stories. Every story's name is the link your can click to navigate to story.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/split-pane/split-pane.tsx",
      "encapsulation": "shadow",
      "tag": "stories-split-pane",
      "name": "stories-split-pane",
      "readme": "# stories-split-panel\n\nThe stories-split-panel is a component to split content vertically or horizontally.\n",
      "description": "The stories-split-panel is a component to split content vertically or horizontally.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "defaultSize",
          "type": "number",
          "mutable": false,
          "attr": "default-size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        },
        {
          "name": "isResizing",
          "type": "boolean",
          "mutable": true,
          "attr": "resizing",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        },
        {
          "name": "minSize",
          "type": "number",
          "mutable": false,
          "attr": "min-size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        },
        {
          "name": "split",
          "type": "\"horizontal\" | \"vertical\"",
          "mutable": false,
          "attr": "split",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        }
      ],
      "attributes": [
        {
          "name": "default-size",
          "type": "number",
          "mutable": false,
          "attr": "default-size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "0",
          "description": ""
        },
        {
          "name": "resizing",
          "type": "boolean",
          "mutable": true,
          "attr": "resizing",
          "reflectToAttr": true,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        },
        {
          "name": "min-size",
          "type": "number",
          "mutable": false,
          "attr": "min-size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "0",
          "description": ""
        },
        {
          "name": "split",
          "type": "\"horizontal\" | \"vertical\"",
          "mutable": false,
          "attr": "split",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "storiesSizeChange",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": [],
          "name": "storiesSizeChange",
          "description": "",
          "type": "number"
        }
      ],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tab/tab.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tab",
      "name": "stories-tab",
      "readme": "# stories-tab\n\nThe stories-tab is a child component of a stories-tab. \n\n> Note: This component should only be used with vanilla or Stencil JavaScript projects. For Angular, React, and Vue apps you do not need to use `stories-tab` to declare your tab components.\n\nSee the [stories-tabs](../tabs) for configuration details.\n",
      "description": "The stories-tab is a child component of a stories-tab. \n\n> Note: This component should only be used with vanilla or Stencil JavaScript projects. For Angular, React, and Vue apps you do not need to use `stories-tab` to declare your tab components.\n\nSee the [stories-tabs](../tabs) for configuration details.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "tab",
          "type": "string",
          "mutable": false,
          "attr": "tab",
          "reflectToAttr": false,
          "docs": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true,
          "description": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them."
        }
      ],
      "attributes": [
        {
          "name": "tab",
          "type": "string",
          "mutable": false,
          "attr": "tab",
          "reflectToAttr": false,
          "docs": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true,
          "description": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tab-bar/tab-bar.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tab-bar",
      "name": "stories-tab-bar",
      "readme": "# stories-tab-bar\n\nThe stories-tab-bar is a component that contains a set of [stories-tab-button's](../tab-button). Put the stories-tab-bar in the [stories-tabs](../tabs) to organize communication with every [stories-tab](../tab).\n",
      "description": "The stories-tab-bar is a component that contains a set of [stories-tab-button's](../tab-button). Put the stories-tab-bar in the [stories-tabs](../tabs) to organize communication with every [stories-tab](../tab).",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "selectedTab",
          "type": "string",
          "mutable": false,
          "attr": "selected-tab",
          "reflectToAttr": false,
          "docs": "The selected tab component",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The selected tab component"
        }
      ],
      "attributes": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": true,
          "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics)."
        },
        {
          "name": "selected-tab",
          "type": "string",
          "mutable": false,
          "attr": "selected-tab",
          "reflectToAttr": false,
          "docs": "The selected tab component",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "The selected tab component"
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the tab bar",
          "description": "Background of the tab bar"
        },
        {
          "name": "--border",
          "annotation": "prop",
          "docs": "Border of the tab bar",
          "description": "Border of the tab bar"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Color of the tab bar",
          "description": "Color of the tab bar"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tab-button/tab-button.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tab-button",
      "name": "stories-tab-button",
      "readme": "# stories-tab-button\n\nThe stories-tab-button is a component that is placed inside of a [stories-tab-bar](../tab-bar). You can change the layout of the text and icon in the tab bar.\n\nSee the [stories-tabs](../tabs) documentation for details on configuring tabs.\n",
      "description": "The stories-tab-button is a component that is placed inside of a [stories-tab-bar](../tab-bar). You can change the layout of the text and icon in the tab bar.\n\nSee the [stories-tabs](../tabs) documentation for details on configuring tabs.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the tab button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "If `true`, the user cannot interact with the tab button."
        },
        {
          "name": "layout",
          "type": "\"icon-bottom\" | \"icon-end\" | \"icon-hide\" | \"icon-start\" | \"icon-top\" | \"label-hide\"",
          "mutable": true,
          "attr": "layout",
          "reflectToAttr": false,
          "docs": "Set the layout of the text and icon in the tab bar.\nIt defaults to `'icon-start'`.",
          "docsTags": [],
          "default": "'icon-start'",
          "values": [
            {
              "value": "icon-bottom",
              "type": "string"
            },
            {
              "value": "icon-end",
              "type": "string"
            },
            {
              "value": "icon-hide",
              "type": "string"
            },
            {
              "value": "icon-start",
              "type": "string"
            },
            {
              "value": "icon-top",
              "type": "string"
            },
            {
              "value": "label-hide",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "Set the layout of the text and icon in the tab bar.\nIt defaults to `'icon-start'`."
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "The selected tab component",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "The selected tab component"
        },
        {
          "name": "tab",
          "type": "string",
          "mutable": false,
          "attr": "tab",
          "reflectToAttr": false,
          "docs": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them."
        }
      ],
      "attributes": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If `true`, the user cannot interact with the tab button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "If `true`, the user cannot interact with the tab button."
        },
        {
          "name": "layout",
          "type": "\"icon-bottom\" | \"icon-end\" | \"icon-hide\" | \"icon-start\" | \"icon-top\" | \"label-hide\"",
          "mutable": true,
          "attr": "layout",
          "reflectToAttr": false,
          "docs": "Set the layout of the text and icon in the tab bar.\nIt defaults to `'icon-start'`.",
          "docsTags": [],
          "default": "'icon-start'",
          "values": [
            {
              "value": "icon-bottom",
              "type": "string"
            },
            {
              "value": "icon-end",
              "type": "string"
            },
            {
              "value": "icon-hide",
              "type": "string"
            },
            {
              "value": "icon-start",
              "type": "string"
            },
            {
              "value": "icon-top",
              "type": "string"
            },
            {
              "value": "label-hide",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "defaultValue": "'icon-start'",
          "description": "Set the layout of the text and icon in the tab bar.\nIt defaults to `'icon-start'`."
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "The selected tab component",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "false",
          "description": "The selected tab component"
        },
        {
          "name": "tab",
          "type": "string",
          "mutable": false,
          "attr": "tab",
          "reflectToAttr": false,
          "docs": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false,
          "description": "A tab id must be provided for each `stories-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them."
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [
        {
          "name": "--background",
          "annotation": "prop",
          "docs": "Background of the tab button",
          "description": "Background of the tab button"
        },
        {
          "name": "--background-focused",
          "annotation": "prop",
          "docs": "Background of the tab button when focused with the tab key",
          "description": "Background of the tab button when focused with the tab key"
        },
        {
          "name": "--background-focused-opacity",
          "annotation": "prop",
          "docs": "Opacity of the tab button background when focused with the tab key",
          "description": "Opacity of the tab button background when focused with the tab key"
        },
        {
          "name": "--color",
          "annotation": "prop",
          "docs": "Color of the tab button",
          "description": "Color of the tab button"
        },
        {
          "name": "--color-focused",
          "annotation": "prop",
          "docs": "Color of the tab button when focused with the tab key",
          "description": "Color of the tab button when focused with the tab key"
        },
        {
          "name": "--color-selected",
          "annotation": "prop",
          "docs": "Color of the selected tab button",
          "description": "Color of the selected tab button"
        },
        {
          "name": "--padding-bottom",
          "annotation": "prop",
          "docs": "Bottom padding of the tab button",
          "description": "Bottom padding of the tab button"
        },
        {
          "name": "--padding-end",
          "annotation": "prop",
          "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button",
          "description": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button"
        },
        {
          "name": "--padding-start",
          "annotation": "prop",
          "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button",
          "description": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button"
        },
        {
          "name": "--padding-top",
          "annotation": "prop",
          "docs": "Top padding of the tab button",
          "description": "Top padding of the tab button"
        }
      ],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tabs/tabs.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tabs",
      "name": "stories-tabs",
      "readme": "# stories-tabs\n\nThe stories-tabs is a container works as a router outlet in order to handle navigation. It does not provide any UI feedback or mechanism to switch between tabs. In order to do so, an [stories-tab-bar](../tab-bar) should be provided as a direct child of `stories-tabs`.\n",
      "description": "The stories-tabs is a container works as a router outlet in order to handle navigation. It does not provide any UI feedback or mechanism to switch between tabs. In order to do so, an [stories-tab-bar](../tab-bar) should be provided as a direct child of `stories-tabs`.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [
        {
          "name": "getSelected",
          "returns": {
            "type": "Promise<string>",
            "docs": ""
          },
          "signature": "getSelected() => Promise<string | undefined>",
          "parameters": [],
          "docs": "Get the currently selected tab.",
          "docsTags": []
        },
        {
          "name": "getTab",
          "returns": {
            "type": "Promise<HTMLStoriesTabElement>",
            "docs": ""
          },
          "signature": "getTab(tab: string | HTMLStoriesTabElement) => Promise<HTMLStoriesTabElement | undefined>",
          "parameters": [],
          "docs": "Get a specific tab by the value of its `tab` property or an element reference.",
          "docsTags": [
            {
              "name": "param",
              "text": "tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property."
            }
          ]
        },
        {
          "name": "select",
          "returns": {
            "type": "Promise<boolean>",
            "docs": ""
          },
          "signature": "select(tab: string | HTMLStoriesTabElement) => Promise<boolean>",
          "parameters": [],
          "docs": "Select a tab by the value of its `tab` property or an element reference.",
          "docsTags": [
            {
              "name": "param",
              "text": "tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property."
            }
          ]
        }
      ],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tool-bar/tool-bar.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tool-bar",
      "name": "stories-tool-bar",
      "readme": "# stories-toolbar\n\nThe stories-toolbar is a container for other Stories components such as stories-button, stories-toggle, etc.\n",
      "description": "The stories-toolbar is a container for other Stories components such as stories-button, stories-toggle, etc.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tool-button/tool-button.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tool-button",
      "name": "stories-tool-button",
      "readme": "# stories-toolbutton\n\n> Notice: Deprecated. Use stories-button instead\n",
      "description": "> Notice: Deprecated. Use stories-button instead",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "command",
          "type": "\"zoomIn\" | \"zoomOut\" | \"zoomReset\"",
          "mutable": false,
          "attr": "command",
          "reflectToAttr": false,
          "docs": "command property",
          "docsTags": [],
          "values": [
            {
              "value": "zoomIn",
              "type": "string"
            },
            {
              "value": "zoomOut",
              "type": "string"
            },
            {
              "value": "zoomReset",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "command property"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "disabled property",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "disabled property"
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "icon property",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "icon property"
        }
      ],
      "attributes": [
        {
          "name": "command",
          "type": "\"zoomIn\" | \"zoomOut\" | \"zoomReset\"",
          "mutable": false,
          "attr": "command",
          "reflectToAttr": false,
          "docs": "command property",
          "docsTags": [],
          "values": [
            {
              "value": "zoomIn",
              "type": "string"
            },
            {
              "value": "zoomOut",
              "type": "string"
            },
            {
              "value": "zoomReset",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "command property"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "disabled property",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false,
          "description": "disabled property"
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "icon property",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false,
          "description": "icon property"
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "storiesAction",
          "detail": "{ command: string; data?: unknown; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Action Event",
          "docsTags": [],
          "name": "storiesAction",
          "description": "Action Event",
          "type": "{ command: string; data?: unknown; }"
        }
      ],
      "cssProperties": [],
      "slots": [],
      "dependents": [
        "stories-tool-zoom"
      ],
      "dependencies": [
        "stories-icon"
      ],
      "dependencyGraph": {
        "stories-tool-button": [
          "stories-icon"
        ],
        "stories-tool-zoom": [
          "stories-tool-button"
        ]
      }
    },
    {
      "filePath": "./src/components/tool-zoom/tool-zoom.tsx",
      "encapsulation": "shadow",
      "tag": "stories-tool-zoom",
      "name": "stories-tool-zoom",
      "readme": "# stories-tool-zoom\n\nThe stories-tool-zoom is a container for zoom-in, zoom-out, and zoom-reset stories-buttons.\n",
      "description": "The stories-tool-zoom is a container for zoom-in, zoom-out, and zoom-reset stories-buttons.",
      "docsTags": [],
      "usage": {},
      "properties": [],
      "attributes": [],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [],
      "dependencies": [
        "stories-tool-button"
      ],
      "dependencyGraph": {
        "stories-tool-zoom": [
          "stories-tool-button"
        ],
        "stories-tool-button": [
          "stories-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/zoom/zoom.tsx",
      "encapsulation": "shadow",
      "tag": "stories-zoom",
      "name": "stories-zoom",
      "readme": "# stories-zoom\n\nThe stories-zoom is a container managing visual zoom of content.\n",
      "description": "The stories-zoom is a container managing visual zoom of content.",
      "docsTags": [],
      "usage": {},
      "properties": [
        {
          "name": "zoom",
          "type": "number",
          "mutable": false,
          "attr": "zoom",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "description": ""
        }
      ],
      "attributes": [
        {
          "name": "zoom",
          "type": "number",
          "mutable": false,
          "attr": "zoom",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false,
          "defaultValue": "1",
          "description": ""
        }
      ],
      "methods": [],
      "events": [],
      "cssProperties": [],
      "slots": [],
      "dependents": [
        "stories-preview"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "stories-preview": [
          "stories-zoom"
        ]
      }
    }
  ]
}