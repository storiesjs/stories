{"file":"stories-addon-controls.js","mappings":";;;;;;;AAEO,MAAM,aAAa,GAAG,eAAe;;ACF5C,MAAM,gBAAgB,GAAG,sBAAsB;;MCyBlC,aAAa;EAL1B;;;;IASW,aAAQ,GAAU,EAAE,CAAC;IA6B9B,cAAS,GAAG,CAAC,KAAU;;MAErB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;KACvC,CAAC;GAUH;EAtCC,KAAK;IACH,OAAO,UAAU,CAAC;GACnB;EAGD,MAAM,mBAAmB,CAAC,KAAqB,EAAE,OAAqB;IACpE,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;GAClE;EAED,MAAM,gBAAgB;;IAEpB,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;IAExB,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;;GAG5C;EAED,MAAM,oBAAoB;;IAExB,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;IAE5C,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;GAC3B;EAOD,MAAM;IACJ,QACE,EAAC,IAAI,QACH,gCAAyB,CACpB,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/addons/addon-controls/Control.ts","./src/addons/addon-controls/addon-controls.scss?tag=stories-addon-controls&encapsulation=shadow","./src/addons/addon-controls/addon-controls.tsx"],"sourcesContent":["\n\nexport const CONTROL_EVENT = 'CONTROL_EVENT';\n","@import \"../../themes/stories.globals\";\n\n:host {\n  display: block;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Host, h, Element, State, Method } from '@stencil/core';\n\n// import type { ObservableMap } from '@stencil/store';\n// import { createStore } from '@stencil/store';\nimport { api } from '../../api';\nimport type { Messages, StoryComponent, StoryContext, Addon } from '../../types';\nimport { messages } from '../../types';\n\nimport { CONTROL_EVENT } from './Control';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AddonControlsState = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  controls: any[];\n};\n\n@Component({\n  tag: 'stories-addon-controls',\n  styleUrl: 'addon-controls.scss',\n  shadow: true,\n})\nexport class AddonControls implements Addon {\n  id: \"ADDON_CONTROLS\";\n  type: 'panel';\n  @Element() el!: HTMLElement;\n  @State() controls: any[] = [];\n  // @State() store: ObservableMap<AddonControlsState>;\n  messages: Messages;\n\n  title(): string {\n    return \"Controls\";\n  }\n\n  @Method()\n  async storyContextChanged(story: StoryComponent, context: StoryContext): Promise<void> {\n    console.log('AddonControls.storyContextChanged', story, context);\n  }\n\n  async componentDidLoad(): Promise<void> {\n    // Register addon\n    api.registerAddon(this);\n    // Register event listeners\n    messages.on(CONTROL_EVENT, this.onControl);\n    // Create store\n    // this.store = createStore({controls: []})\n  }\n\n  async disconnectedCallback(): Promise<void> {\n    // Unregister event listener\n    messages.off(CONTROL_EVENT, this.onControl);\n    // Unregster addon\n    api.unregisterAddon(this);\n  }\n\n  onControl = (event: any): void => {\n    // this.store.state.actions.push(actionDisplay)\n    console.log('onControl.event', event);\n  };\n\n  render(): JSX.Element {\n    return (\n      <Host>\n        <div>Addon Controls</div>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}