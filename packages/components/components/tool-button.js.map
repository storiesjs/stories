{"file":"tool-button.js","mappings":";;;;;;AAAA,MAAM,aAAa,GAAG,6nBAA6nB;;MCWtoB,UAAU;;;;;;;;;;EAyBrB,YAAY,CAAC,KAAiB;IAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;GAClD;EAED,MAAM;IACJ,QACE,cAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IACpE,oBAAc,IAAI,EAAE,IAAI,CAAC,IAAI,GAAiB,CACvC,EACT;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/tool-button/tool-button.scss?tag=stories-tool-button&encapsulation=shadow","./src/components/tool-button/tool-button.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\nbutton {\n  align-items: center;\n  background: transparent;\n  border: none;\n  border-radius: 4px;\n  color: inherit;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 13px;\n  font-weight: bold;\n  height: 28px;\n  justify-content: center;\n  margin-top: 6px;\n  padding: 8px 7px;\n}\n\n/* button > svg {\n  width: 14px;\n}; */\n\nbutton:hover, button:focus-visible {\n  // background: transparentize(var(--stories-color-secondary), 0.88);\n  // color: var(--stories-color-secondary);\n  color: var(--color-hover);\n  background: var(--background-hover);\n  opacity: var(--background-hover-opacity);\n}\n\nbutton:focus-visible {\n  outline: auto, /* Ensures links have the same focus style */\n}\n\nbutton:focus:not(:focus-visible) {\n  outline: 'none'\n}\n\nbutton.active {\n  // background-color: var(--stories-background-hoverable);\n  // color: var(--stories-color-secondary);\n  color: var(--color-hover);\n  background: var(--background-hover);\n}\n\nbutton.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n","import type { EventEmitter} from '@stencil/core';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Event, h, Prop } from '@stencil/core';\n\nimport type { Commands, ToolEvent } from '../../types';\n\n@Component({\n  tag: 'stories-tool-button',\n  styleUrl: 'tool-button.scss',\n  shadow: true,\n})\nexport class ToolButton {\n\n  /**\n   * Action Event\n   */\n  @Event({ bubbles: true, composed: true }) storiesAction: EventEmitter<ToolEvent>;\n\n  /**\n   * disabled property\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * icon property\n   */\n  @Prop() icon: string;\n\n  /**\n   * command property\n   */\n  @Prop() command: Commands;\n\n  /**\n   * Handle mouse event and generate ActionEvent\n   */\n  clickHandler(event: MouseEvent): void {\n    event.preventDefault();\n    this.storiesAction.emit({command: this.command});\n  }\n\n  render(): JSX.Element {\n    return (\n      <button disabled={this.disabled} onClick={this.clickHandler.bind(this)}>\n        <stories-icon name={this.icon}></stories-icon>\n      </button>\n    );\n  }\n\n}\n"],"version":3}