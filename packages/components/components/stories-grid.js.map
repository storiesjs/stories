{"file":"stories-grid.js","mappings":";;;;;AAAA,MAAM,OAAO,GAAG,4mKAA4mK;;MCQ/mK,IAAI;EALjB;;;;;;;IAUU,UAAK,GAAG,KAAK,CAAC;GAYvB;EAVC,MAAM;IACJ,QACE,EAAC,IAAI,IACH,KAAK,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,KAAK,EAAC,IAEjC,eAAa,CACR,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/grid/grid.scss?tag=stories-grid&encapsulation=shadow","./src/components/grid/grid.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n@import \"./grid.mixins\";\n\n// Grid\n// --------------------------------------------------\n\n/// @prop - The padding for the grid\n$grid-padding:               var(--stories-grid-padding, 5px) !default;\n\n/// @prop - The padding for the grid at different breakpoints\n$grid-paddings: (\n  xs: var(--stories-grid-padding-xs, $grid-padding),\n  sm: var(--stories-grid-padding-sm, $grid-padding),\n  md: var(--stories-grid-padding-md, $grid-padding),\n  lg: var(--stories-grid-padding-lg, $grid-padding),\n  xl: var(--stories-grid-padding-xl, $grid-padding)\n) !default;\n\n/// @prop - Width of the grid for different screen sizes when fixed is enabled\n$grid-widths: (\n  xs: var(--stories-grid-width-xs, var(--stories-grid-width, 100%)),\n  sm: var(--stories-grid-width-sm, var(--stories-grid-width, 540px)),\n  md: var(--stories-grid-width-md, var(--stories-grid-width, 720px)),\n  lg: var(--stories-grid-width-lg, var(--stories-grid-width, 960px)),\n  xl: var(--stories-grid-width-xl, var(--stories-grid-width, 1140px))\n) !default;\n\n\n// Grid\n// --------------------------------------------------\n\n:host {\n  /**\n   * @prop --stories-grid-padding: Padding for the Grid\n   * @prop --stories-grid-padding-xs: Padding for the Grid on xs screens\n   * @prop --stories-grid-padding-sm: Padding for the Grid on sm screens\n   * @prop --stories-grid-padding-md: Padding for the Grid on md screens\n   * @prop --stories-grid-padding-lg: Padding for the Grid on lg screens\n   * @prop --stories-grid-padding-xl: Padding for the Grid on xl screens\n   *\n   * @prop --stories-grid-width: Width of the fixed Grid\n   * @prop --stories-grid-width-xs: Width of the fixed Grid on xs screens\n   * @prop --stories-grid-width-sm: Width of the fixed Grid on sm screens\n   * @prop --stories-grid-width-md: Width of the fixed Grid on md screens\n   * @prop --stories-grid-width-lg: Width of the fixed Grid on lg screens\n   * @prop --stories-grid-width-xl: Width of the fixed Grid on xl screens\n   */\n\n  @include make-breakpoint-padding($grid-paddings);\n  @include margin-horizontal(auto);\n\n  display: block;\n\n  flex: 1;\n}\n\n// Fixed Grid\n// --------------------------------------------------\n\n:host(.grid-fixed) {\n  @include make-grid-widths();\n}\n\n// Grid Padding\n// --------------------------------------------------\n\n// Remove the padding from grid and all immediate children columns\n:host(.stories-no-padding) {\n  --stories-grid-column-padding: 0;\n  --stories-grid-column-padding-xs: 0;\n  --stories-grid-column-padding-sm: 0;\n  --stories-grid-column-padding-md: 0;\n  --stories-grid-column-padding-lg: 0;\n  --stories-grid-column-padding-xl: 0;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Host, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'stories-grid',\n  styleUrl: 'grid.scss',\n  shadow: true,\n})\nexport class Grid {\n\n  /**\n   * If `true`, the grid will have a fixed width based on the screen size.\n   */\n  @Prop() fixed = false;\n\n  render(): JSX.Element {\n    return (\n      <Host\n        class={{'grid-fixed': this.fixed}}\n      >\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}