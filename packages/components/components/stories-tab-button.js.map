{"file":"stories-tab-button.js","mappings":"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","names":[],"sources":["./src/components/tab-button/tab-button.scss?tag=stories-tab-button&encapsulation=shadow","./src/components/tab-button/tab-button.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\n:host {\n  /**\n   * @prop --background: Background of the tab button\n   * @prop --background-focused: Background of the tab button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key\n   *\n   * @prop --color: Color of the tab button\n   * @prop --color-focused: Color of the tab button when focused with the tab key\n   * @prop --color-selected: Color of the selected tab button\n   *\n   * @prop --padding-top: Top padding of the tab button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button\n   * @prop --padding-bottom: Bottom padding of the tab button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button\n   */\n  --background-focused-opacity: 1;\n\n  // flex: 1 1 0%;\n  // flex-grow: 0;\n  // flex-shrink: 0;\n  // flex-basis: 0%;\n\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n\n  outline: none;\n\n  background: pink;  /*var(--background);*/\n  color: var(--color);\n}\n\n// Tab Button: Native\n// --------------------------------------------------\n\n.button-native {\n  @include border-radius(inherit);\n  @include margin(0);\n  @include padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));\n  @include text-inherit();\n\n  display: flex;\n  position: relative;\n\n  flex-direction: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n\n  // width: 100%;\n  height: 100%;\n\n  border: 0;\n\n  outline: none;\n\n  background: transparent;\n\n  text-decoration: none;\n\n  cursor: pointer;\n  overflow: hidden;\n  box-sizing: border-box;\n  -webkit-user-drag: none;\n}\n\n.button-native::after {\n  @include button-state();\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n\n  flex-flow: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n\n  // width: 100%;\n  height: 100%;\n\n  z-index: 1;\n}\n\n// Tab Button: States\n// --------------------------------------------------\n\n:host(.stories-focused) .button-native {\n  color: var(--color-focused);\n\n  &::after {\n    background: var(--background-focused);\n\n    opacity: var(--background-focused-opacity);\n  }\n}\n\n@media (any-hover: hover) {\n  a:hover {\n    color: var(--color-selected);\n  }\n}\n\n:host(.tab-selected) {\n  color: var(--color-selected);\n}\n\n:host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n:host(.tab-disabled) {\n  pointer-events: none;\n\n  opacity: .4;\n}\n\n\n// Tab Button: Label / Icon\n// --------------------------------------------------\n\n::slotted(stories-label),\n::slotted(stories-icon) {\n  display: block;\n\n  align-self: center;\n\n  max-width: 100%;\n\n  text-overflow: ellipsis;\n\n  white-space: nowrap;\n\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n::slotted(stories-label) {\n  order: 0;\n}\n\n::slotted(stories-icon) {\n  order: -1;\n\n  height: 1em;\n}\n\n\n:host(.tab-has-label-only) ::slotted(stories-label) {\n  white-space: normal;\n}\n\n\n// Tab Button: Badge\n// --------------------------------------------------\n\n::slotted(stories-badge) {\n  box-sizing: border-box;\n\n  position: absolute;\n\n  z-index: 1;\n}\n\n\n// Tab Button: Layout\n// --------------------------------------------------\n\n:host(.tab-layout-icon-start) {\n  flex-direction: row;\n}\n\n:host(.tab-layout-icon-end) {\n  flex-direction: row-reverse;\n}\n\n:host(.tab-layout-icon-bottom) {\n  flex-direction: column-reverse;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(stories-icon) {\n  display: none;\n}\n\n:host(.tab-layout-label-hide) ::slotted(stories-label) {\n  display: none;\n}\n","import type { EventEmitter } from '@stencil/core';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Host, h, Element, Prop, Event, Listen } from '@stencil/core';\n\nimport type { TabBarChangedEventDetail, TabButtonClickEventDetail, TabButtonLayout } from '../../types';\n\n@Component({\n  tag: 'stories-tab-button',\n  styleUrl: 'tab-button.scss',\n  shadow: true,\n})\nexport class TabButton {\n  @Element() el!: HTMLElement;\n\n  /**\n   * If `true`, the user cannot interact with the tab button.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Set the layout of the text and icon in the tab bar.\n   * It defaults to `'icon-start'`.\n   */\n  @Prop({ mutable: true }) layout?: TabButtonLayout = 'icon-start';\n\n  /**\n   * The selected tab component\n   */\n  @Prop({ mutable: true }) selected = false;\n\n  /**\n   * A tab id must be provided for each `stories-tab`. It's used internally to reference\n   * the selected tab or by the router to switch between them.\n   */\n  @Prop() tab?: string;\n\n  /**\n   * Emitted when the tab bar is clicked\n   * @internal\n   */\n  @Event() storiesTabButtonClick!: EventEmitter<TabButtonClickEventDetail>;\n\n  @Listen('storiesTabBarChanged', { target: 'window' })\n  onTabBarChanged(ev: CustomEvent<TabBarChangedEventDetail>): void {\n    const dispatchedFrom = ev.target as HTMLElement;\n    const parent = this.el.parentElement as EventTarget;\n\n    if ((ev.composedPath && ev.composedPath().includes(parent)) || (dispatchedFrom && dispatchedFrom.contains(this.el))) {\n      this.selected = this.tab === ev.detail.tab;\n    }\n  }\n\n  private selectTab(ev: Event): void {\n    if (this.tab !== undefined) {\n      if (!this.disabled) {\n        this.storiesTabButtonClick.emit({\n          tab: this.tab,\n          selected: this.selected\n        });\n      }\n      ev.preventDefault();\n    }\n  }\n\n  private get hasLabel() {\n    return !!this.el.querySelector('stories-label');\n  }\n\n  private get hasIcon() {\n    return !!this.el.querySelector('stories-icon');\n  }\n\n  private get tabIndex() {\n    if (this.disabled) { return -1; }\n\n    const hasTabIndex = this.el.hasAttribute('tabindex');\n\n    if (hasTabIndex) {\n      return this.el.getAttribute('tabindex');\n    }\n\n    return 0;\n  }\n\n  private onKeyUp = (ev: KeyboardEvent) => {\n    if (ev.key === 'Enter' || ev.key === ' ') {\n      this.selectTab(ev);\n    }\n  }\n\n  private onClick = (ev: Event) => {\n    this.selectTab(ev);\n  }\n\n  render(): JSX.Element {\n    const { disabled, hasIcon, hasLabel, tabIndex, layout, selected, tab } = this;\n\n    return (\n      <Host\n        aria-selected={selected ? 'true' : null}\n        class={{\n          'tab-selected': selected,\n          'tab-disabled': disabled,\n          'tab-has-label': hasLabel,\n          'tab-has-icon': hasIcon,\n          'tab-has-label-only': hasLabel && !hasIcon,\n          'tab-has-icon-only': hasIcon && !hasLabel,\n          [`tab-layout-${layout}`]: true\n        }}\n        id={tab !== undefined ? `tab-button-${tab}` : null}\n        onClick={this.onClick}\n        onKeyup={this.onKeyUp}\n        role=\"tab\"\n        tabindex={tabIndex}\n      >\n        <a href='#' tabIndex={-1} class=\"button-native\" part=\"native\">\n          <span class=\"button-inner\">\n            <slot></slot>\n          </span>\n        </a>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}