{"file":"stories-label.js","mappings":";;;;;;AAAA,MAAM,QAAQ,GAAG,6kCAA6kC;;MCWjlC,KAAK;EALlB;;;;;;;IAkBU,aAAQ,GAAsC,OAAO,CAAC;GAiB/D;EAfC,MAAM;IACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAE/B,QACE,EAAC,IAAI,IACH,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;QACpC,CAAC,SAAS,QAAQ,EAAE,GAAG,QAAQ,KAAK,SAAS;QAC7C,WAAW,EAAE,QAAQ,CAAC,GAAG,KAAK,KAAK;OACpC,CAAC,IAEF,eAAO,CACF,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/label/label.scss?tag=stories-label&encapsulation=shadow","./src/components/label/label.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\n\n// Label\n// --------------------------------------------------\n\n:host-context(.item) {\n  /**\n   * @prop --color: Color of the label\n   */\n  --color: initial;\n\n  display: block;\n\n  color: var(--color);\n\n  font-family: $font-family-base;\n  font-size: inherit;\n\n  text-overflow: ellipsis;\n\n  white-space: nowrap;\n\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.stories-color) {\n  color: current-color(base);\n}\n\n:host(.stories-text-wrap),\n:host([text-wrap]) {\n  white-space: normal;\n}\n\n:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  opacity: .3;\n  pointer-events: none;\n}\n\n:host-context(.item-input) {\n  flex: initial;\n\n  max-width: 200px;\n  pointer-events: none;\n}\n\n:host-context(.item-textarea) {\n  align-self: baseline;\n}\n\n\n// Fixed Inputs\n// --------------------------------------------------\n\n:host(.label-fixed) {\n  flex: 0 0 100px;\n\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n// Stacked & Floating Inputs\n// --------------------------------------------------\n\n:host(.label-stacked),\n:host(.label-floating) {\n  @include margin(null, null, 0, null);\n\n  align-self: stretch;\n\n  width: auto;\n  max-width: 100%;\n}\n\n:host(.label-no-animate.label-floating) {\n  transition: none;\n}\n\n// Headings\n// --------------------------------------------------\n\n::slotted(*) h1,\n::slotted(*) h2,\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  text-overflow: inherit;\n\n  overflow: inherit;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Host, h, Element, Prop } from '@stencil/core';\n\nimport type { Color } from '../../types';\nimport { createColorClasses } from '../../utils';\n\n@Component({\n  tag: 'stories-label',\n  styleUrl: 'label.scss',\n  shadow: true,\n})\nexport class Label {\n  @Element() el!: HTMLElement;\n\n  /**\n   * The color to use from your application's color palette.\n   * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n   * For more information on colors, see [theming](/docs/theming/basics).\n   */\n  @Prop({ reflect: true }) color?: Color;\n\n  /**\n   * The position determines where and how the label behaves inside an item.\n   */\n  @Prop() position?: 'fixed' | 'stacked' | 'floating' = 'fixed';\n\n  render(): JSX.Element {\n    const position = this.position;\n\n    return (\n      <Host\n        class={createColorClasses(this.color, {\n          [`label-${position}`]: position !== undefined,\n          'label-rtl': document.dir === 'rtl'\n        })}\n      >\n        <slot/>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}