{"file":"stories-split-pane.js","mappings":"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","names":[],"sources":["./src/components/split-pane/split-pane.scss?tag=stories-split-pane&encapsulation=shadow","./src/components/split-pane/split-pane.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\n:host {\n  display: grid;\n  // grid-template-columns: var(--first-size, 1fr) max-content var(--second-size, 1fr);\n  grid-template-columns: 1fr max-content 1fr;\n  user-select: auto;\n  cursor: auto;\n  width: auto;\n  height: 100vh;\n}\n\n:host([resizing]) {\n  user-select: none;\n}\n\n:host([resizing][split='horizontal']) {\n  cursor: col-resize;\n}\n\n:host #median {\n  inline-size: 0.5rem;\n  grid-column: 2 / 3;\n}\n\n:host #median:hover {\n  cursor: col-resize;\n}\n\n:host [name=\"slot1\"] {\n  grid-column: 1 / 2;\n  grid-row: 1 / 1;\n}\n\n:host [name=\"slot2\"] {\n  grid-column: 3 / 4;\n  grid-row: 1 / 1;\n}\n\n:host([resizing][split='vertical']) {\n  cursor: row-resize;\n}\n\n:host([split='vertical']) {\n  // grid-template-rows: var(--first-size, 1fr) max-content var(--second-size, 1fr);\n  grid-template-rows: 1fr max-content 1fr;\n  grid-template-columns: none;\n}\n\n:host([split='vertical']) #median {\n  block-size: 0.5rem;\n  inline-size: auto;\n  grid-row: 2 / 3;\n  grid-column: 1 / 1;\n}\n\n:host([split='vertical']) #median:hover {\n  cursor: row-resize;\n}\n\n:host([split='vertical']) [name=\"slot1\"] {\n  grid-row: 1 / 2;\n  grid-column: 1 / 1;\n}\n\n:host([split='vertical']) [name=\"slot2\"] {\n  grid-row: 3 / 4;\n  grid-column: 1 / 1;\n}\n\n#median {\n  background:bisque;\n}\n\n::slotted(*) {\n  overflow: auto;\n}\n","import type { EventEmitter } from '@stencil/core';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, h, Prop, Element, Event } from '@stencil/core';\n\n@Component({\n  tag: 'stories-split-pane',\n  styleUrl: 'split-pane.scss',\n  shadow: true,\n})\nexport class SplitPane {\n  @Prop() split: \"horizontal\" | \"vertical\";\n  @Prop() minSize = 0;\n  @Prop() defaultSize = 0;\n  @Prop({ attribute: \"resizing\", mutable: true, reflect: true }) isResizing: boolean;\n\n  @Element() el: HTMLElement;\n  median: HTMLDivElement;\n  left: number;\n  top: number;\n  value: number;\n\n  @Event({ bubbles: true, composed: true }) storiesSizeChange: EventEmitter<number>;\n\n  componentDidLoad(): void {\n    if (this.defaultSize > 0 || this.minSize > 0) {\n      if (this.split === \"horizontal\") {\n        const width = this.median.getBoundingClientRect().width;\n        this.value = Math.round(this.defaultSize);\n        // Check min size\n        this.value = this.value < this.minSize ? this.minSize : this.value;\n        this.el.style.gridTemplateColumns = `${this.value}px ${width}px 1fr`;\n      } else {\n        const height = this.median.getBoundingClientRect().height;\n        this.value = Math.round(this.defaultSize);\n        // Check min size\n        this.value = this.value < this.minSize ? this.minSize : this.value;\n        this.el.style.gridTemplateRows = `${this.value}px ${height}px 1fr`;\n      }\n    }\n  }\n\n  pointerDown = (e: PointerEvent): void => {\n    e.preventDefault();\n    this.isResizing = true;\n    const clientRect = this.el.getBoundingClientRect();\n    this.left = clientRect.x;\n    this.top = clientRect.y;\n    this.el.addEventListener(\"pointermove\", this.pointerMove);\n    this.el.addEventListener(\"pointerup\", this.pointerUp);\n  }\n\n  pointerMove = (e: PointerEvent): void => {\n    e.preventDefault();\n    if (this.split === \"horizontal\") {\n      const newMedianLeft = e.clientX - this.left;\n      const width = this.median.getBoundingClientRect().width;\n      this.value = Math.round(newMedianLeft - width / 2);\n      // Check min size\n      this.value = this.value < this.minSize ? this.minSize : this.value;\n      this.el.style.gridTemplateColumns = `${this.value}px ${width}px 1fr`;\n    } else {\n      const newMedianTop = e.clientY - this.top;\n      const height = this.median.getBoundingClientRect().height;\n      this.value = Math.round(newMedianTop - height / 2);\n      // Check min size\n      this.value = this.value < this.minSize ? this.minSize : this.value;\n      this.el.style.gridTemplateRows = `${this.value}px ${height}px 1fr`;\n    }\n\t}\n\n  pointerUp = (e: PointerEvent): void => {\n    e.preventDefault();\n\t\tthis.isResizing = false;\n\t\tthis.storiesSizeChange.emit(this.value);\n\t\tthis.el.removeEventListener(\"pointermove\", this.pointerMove);\n\t\tthis.el.removeEventListener(\"pointerup\", this.pointerUp);\n\t}\n\n\n\n  render(): JSX.Element[] {\n    return [\n      <slot name=\"slot1\"></slot>,\n      <div ref={el => this.median = el} id=\"median\" onPointerDown={this.pointerDown}/>,\n      <slot name=\"slot2\"></slot>\n    ];\n  }\n\n}\n"],"version":3}