{"file":"utils.js","mappings":";;;MAEa,WAAW,GAAG,CAAC,QAAgB,EAAE,EAAe;EAC3D,OAAO,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;AACvC,EAAE;MAMW,kBAAkB,GAAG,CAAC,KAA+B,EAAE,WAAwB;EAC1F,OAAO,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,oBACnD,eAAe,EAAE,IAAI,EACrB,CAAC,iBAAiB,KAAK,EAAE,GAAG,IAAI,IAC7B,WAAW,IACZ,WAAW,CAAC;AAClB,EAAE;AAEF;AACO,MAAM,aAAa,GAAQ;EAChC,IAAI,EAAE,kBAAkB;EACxB,IAAI,EAAE,oBAAoB;EAC1B,IAAI,EAAE,oBAAoB;EAC1B,IAAI,EAAE,oBAAoB;EAC1B,IAAI,EAAE,qBAAqB;CAC5B,CAAC;AAEF;AACA;AACA;MACa,eAAe,GAAG,CAAC,UAA8B;EAC5D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,EAAE,EAAE;IACjD,OAAO,IAAI,CAAC;GACb;;EAED,IAAK,MAAc,CAAC,UAAU,EAAE;IAC9B,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IAC7C,OAAO,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC;GAC9C;EACD,OAAO,KAAK,CAAC;AACf;;;;","names":[],"sources":["./src/utils/utils.ts"],"sourcesContent":["import type { Color, CssClassMap } from \"../types\";\n\nexport const hostContext = (selector: string, el: HTMLElement): boolean => {\n  return el.closest(selector) !== null;\n};\n\nexport const findElement = (selector: string, el: HTMLElement): HTMLElement | null => {\n  return el.closest(selector);\n};\n\nexport const createColorClasses = (color: Color | undefined | null, cssClassMap: CssClassMap): CssClassMap => {\n  return (typeof color === 'string' && color.length > 0) ? {\n    'stories-color': true,\n    [`stories-color-${color}`]: true,\n    ...cssClassMap\n  } : cssClassMap;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const SIZE_TO_MEDIA: any = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n};\n\n// Check if the window matches the media query\n// at the breakpoint passed\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\nexport const matchBreakpoint = (breakpoint: string | undefined): boolean => {\n  if (breakpoint === undefined || breakpoint === '') {\n    return true;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((window as any).matchMedia) {\n    const mediaQuery = SIZE_TO_MEDIA[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nexport const openURL = async (url: string | undefined | null): Promise<boolean> => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    // TODO: organise navigation\n    return Promise.resolve(true)\n  }\n  return false;\n};\n"],"version":3}