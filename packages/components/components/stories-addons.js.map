{"file":"stories-addons.js","mappings":";;;;;;AAAA,MAAM,SAAS,GAAG,EAAE;;MCWP,MAAM;;;;;;;EAIjB,MAAM,aAAa,CAAC,KAAY;IAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;MACpB,MAAM,IAAI,KAAK,CAAC,iCAAiC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;KAC9D;IACD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;GAC1B;;EAID,MAAM,eAAe,CAAC,KAAY;IAChC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;MACrB,MAAM,IAAI,KAAK,CAAC,2BAA2B,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;KACxD;IACD,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;GACzB;EAGD,MAAM,SAAS,CAAC,EAAU;IACxB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;MACf,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;KAClD;IACD,OAAO,MAAM,CAAC,EAAE,CAAC,CAAC;GACnB;EAGD,MAAM,mBAAmB,CAAC,KAAqB,EAAE,OAAqB;;IAEpE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK;MACvC,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3C,CAAC,CAAC;GACJ;EAED,MAAM;IACJ,QACE,eAAO,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/addons/addons/addons.scss?tag=stories-addons&encapsulation=shadow","./src/addons/addons/addons.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, h, Method } from '@stencil/core';\n\nimport { state } from '../../store';\nimport type { StoryComponent, StoryContext, Addon } from '../../types';\n\n@Component({\n  tag: 'stories-addons',\n  styleUrl: 'addons.scss',\n  shadow: true,\n})\nexport class Addons {\n\n  @Method()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async registerAddon(addon: Addon): Promise<void> {\n    const addons = state.addons;\n    if (addons[addon.id]) {\n      throw new Error(`Please remove duplicate addon ${addon.id}`);\n    }\n    addons[addon.id] = addon;\n  }\n\n  @Method()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async unregisterAddon(addon: Addon): Promise<void> {\n    const addons = state.addons;\n    if (!addons[addon.id]) {\n      throw new Error(`Cannot unregister addon ${addon.id}`);\n    }\n    delete addons[addon.id];\n  }\n\n  @Method()\n  async findAddon(id: string): Promise<Addon> {\n    const addons = state.addons;\n    if (!addons[id]) {\n      throw new Error(`Cannot find addon by id ${id}`);\n    }\n    return addons[id];\n  }\n\n  @Method()\n  async storyContextChanged(story: StoryComponent, context: StoryContext): Promise<void> {\n    // Update all addons\n    Object.values(state.addons).forEach(addon => {\n      addon.storyContextChanged(story, context);\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <slot/>\n    );\n  }\n}\n"],"version":3}