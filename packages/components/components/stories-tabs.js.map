{"file":"stories-tabs.js","mappings":"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","names":[],"sources":["./src/components/tabs/tabs.scss?tag=stories-tabs&encapsulation=shadow","./src/components/tabs/tabs.tsx"],"sourcesContent":["@import \"../../themes/stories.globals\";\n\n:host {\n  display: flex;\n  position: relative; /*absolute;*/\n\n  flex-direction: column;\n\n  width: 100%;\n  height: 100%; /*40px;*/\n\n  contain: layout size style;\n  z-index: $z-index-page-container;\n}\n\n.tabs-inner {\n  position: relative;\n\n  flex: 1;\n\n  contain: layout size style;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Component, Host, h, Element, State, Method } from '@stencil/core';\n\nimport type { TabButtonClickEventDetail } from '../../types';\n\nconst getTab = (tabs: HTMLStoriesTabElement[], tab: string | HTMLStoriesTabElement): HTMLStoriesTabElement | undefined => {\n  const tabEl = (typeof tab === 'string')\n    ? tabs.find(t => t.tab === tab)\n    : tab;\n\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\n\n@Component({\n  tag: 'stories-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true,\n})\nexport class Tabs {\n  @Element() el!: HTMLStoriesTabsElement;\n\n  private leavingTab?: HTMLStoriesTabElement;\n  @State() selectedTab?: HTMLStoriesTabElement;\n\n  async componentWillLoad(): Promise<void> {\n    const tabs = this.tabs;\n    if (tabs.length > 0) {\n      await this.select(tabs[0]);\n    }\n  }\n\n  componentWillRender(): void {\n    const tabBar = this.el.querySelector('stories-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  @Method()\n  async select(tab: string | HTMLStoriesTabElement): Promise<boolean> {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    this.tabSwitch();\n\n    return true;\n  }\n\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  @Method()\n  async getTab(tab: string | HTMLStoriesTabElement): Promise<HTMLStoriesTabElement | undefined> {\n    return getTab(this.tabs, tab);\n  }\n\n  /**\n   * Get the currently selected tab.\n   */\n  @Method()\n  getSelected(): Promise<string | undefined> {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n\n  private setActive(selectedTab: HTMLStoriesTabElement): Promise<void> {\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n\n  private tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n\n    this.leavingTab = undefined;\n    if (!selectedTab) {\n      return;\n    }\n\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n    }\n  }\n\n  private shouldSwitch(selectedTab: HTMLStoriesTabElement | undefined): selectedTab is HTMLStoriesTabElement {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab;\n  }\n\n  private get tabs() {\n    return Array.from(this.el.querySelectorAll('stories-tab'));\n  }\n\n  private onTabClicked = (ev: CustomEvent<TabButtonClickEventDetail>) => {\n    const { tab } = ev.detail;\n    this.select(tab);\n  }\n\n  render(): JSX.Element {\n    return (\n      <Host\n        onStoriesTabButtonClick={this.onTabClicked}\n      >\n        <div class=\"tabs-inner\">\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}